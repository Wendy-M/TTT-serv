{"version":3,"sources":["Components/firebase.js","Components/monProfil/monProfil.js","Components/connexion/connexion.js","Components/inscription/inscription.js","Components/inscriptionParrainage/inscriptionParrainage.js","Components/mesTips/mesTips.js","Components/modifierMonProfil/modifierMonProfil.js","Components/cardSection/CardSection.js","Components/monAbonnement/checkoutForm.js","Components/monAbonnement/monAbonnement.js","Assets/barreMenu.js","Components/PasswordRenew/PasswordRenew.js","Components/PasswordReset/PasswordReset.js","Assets/footer.js","Components/MesHistoriques/mesHistoriques.js","Components/CagnotteCollective/CagnotteCollective.js","Components/Referent/referent.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","storage","Profil","props","abonnement","ID","state","profil","stripeId","console","log","alert","handleInput","e","setState","target","name","value","renderMesHistory","Array","isArray","history","length","map","element","index","className","key","amount","date","getMonProfil","headers","Headers","Authorization","localStorage","getItem","fetch","method","then","response","json","responseObject","monProfil","error","deleteProfil","window","confirm","preventDefault","data","userId","options","body","JSON","stringify","message","push","deleteAffiliation","getWaiterList","infoStripe","responseData","open","getRestaurantList","restaurant","err","postParrainage","email","renderCompteReferent","mangoWalletReferent","Button","href","renderMesRestau","restaurantName","wallet","stripeUrl","this","Container","Row","Col","sm","md","s","Image","src","picture","roundedCircle","firstname","lastname","staff","adress","city","phone","type","onChange","placeholder","onClick","xs","lg","classeName","to","Component","Connexion","addLogin","password","token","setItem","setLogin","Form","Group","controlId","Control","ClassName","id","Label","Inscription","addNewRegister","acceptControl","onSubmit","as","Check","label","required","variant","block","InscriptionParrainage","mesComs","getMesCommentaires","mesCommentaires","renderMesCommentaires","commentaires","prenom","nom","texte","UploadPicture","useState","imageStorage","setImageStorage","setMessage","useEffect","FormData","files","ref","put","on","modifierMonProfil","change","event","serveur","postDataServeur","serveurInfo","object","editserveur","modifProfilLogo","span","offset","CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","createSubscription","a","customerId","paymentMethodId","priceId","result","subscription","cardElement","getElement","CardElement","createPaymentMethod","card","paymentMethod","disabled","stripePromise","loadStripe","Abonnement","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","Menu","Item","clear","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","footer","Navbar","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","mesHistoriques","Date","toLocaleDateString","class","Table","striped","hover","CagnotteCollective","addBankAccount","region","zip","iban","Type","payoutMangoPay","document","getWalletAmount","multiple","accept","messageBA","referent","getReferentWallet","waiter","renderMesServeurs","tabServeur","serveurName","serveurMail","App","exact","path","render","component","ModifierMonProfil","mesHisto","monAbonnement","Referent","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.50fa7605.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAut6vqnimGfA8-stmTnB-q4tyrXv2aJow\",\n    authDomain: \"tipourboire-57c09.firebaseapp.com\",\n    projectId: \"tipourboire-57c09\",\n    storageBucket: \"tipourboire-57c09.appspot.com\",\n    messagingSenderId: \"592397685193\",\n    appId: \"1:592397685193:web:e6c6a5fca6aeccef5f1818\",\n    measurementId: \"G-5LS7DQYY60\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n  var storage = firebase.storage();\n  export default storage","import React, { Component } from \"react\";\r\nimport \"./monProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport storage from \"../firebase\"\r\n\r\n\r\n\r\n\r\n\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: { restaurant: {} },\r\n      wallet: 1,\r\n      history: [],\r\n      stripeUrl: \"\",\r\n      restaurant: [],\r\n    };\r\n  }\r\n\r\n  abonnement = () => {\r\n    let ID = this.state.profil.stripeId;\r\n    console.log(ID);\r\n    if (ID === null) {\r\n      alert(\"vous devez vous abonner pour bénéficier de l'app\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  renderMesHistory = () => {\r\n    if (Array.isArray(this.state.profil.history)) {\r\n      if (this.state.profil.history.length > 0) {\r\n        return this.state.profil.history.map((element, index) => {\r\n          return (\r\n            <div className={\"historique\"} key={index}>\r\n              <p className={\"pourboire\"}>\r\n                vous avez reçu {element.amount}€ le {element.date}.\r\n              </p>\r\n            </div>\r\n          );\r\n        });\r\n      } else {\r\n        return (\r\n          <p className=\"pourboire\">\r\n            Vous n'avez reçu aucun pourboire pour l'instant.\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  };\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(this.state.profil);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteAffiliation = (e) => {\r\n    const data = {};\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/deleteWaiter\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.getWaiterList();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  infoStripe = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"get\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/customerAccount\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        window.open(responseData, \"_blank\");\r\n      });\r\n  };\r\n  // Récupération des données du serveur / restaurantName\r\n  getRestaurantList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/restaurantList\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ restaurant: data });\r\n          console.log(this.state.restaurant);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n  postParrainage = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/emailParrainage?_id=\" +\r\n        this.state.profil.email,\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n    this.getRestaurantList();\r\n  }\r\n  renderCompteReferent = () => {\r\n    if (this.state.profil.mangoWalletReferent) {\r\n      return (\r\n        <Button className=\"lienCommentaire\" href=\"/referent\">\r\n          Mon compte Référent\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  renderMesRestau = () => {\r\n    if (!this.state.restaurant.length) {\r\n      return (\r\n        <h4 className=\"Nocoms\">\r\n          Vous n'êtes pas encore affilié à un restaurant\r\n        </h4>\r\n      );\r\n    } else {\r\n      return this.state.restaurant.map((element) => {\r\n        return (\r\n          <div className=\"articles\">\r\n            <h4 className=\"titre\">{element.restaurantName}</h4>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"contain parrainage\">\r\n        {/* {this.abonnement()}*/}\r\n        <Row className=\"mescartes\">\r\n          <Col className=\"mesdetails\" sm={12} md={12}>\r\n            <Col s={6} md={12} className=\"colPhoto\">\r\n              <Image\r\n                className=\"photoProfil\"\r\n                src={\r\n                  \"https://back-end.osc-fr1.scalingo.io\" +\r\n                  this.state.profil.picture\r\n                }\r\n                roundedCircle\r\n              />\r\n            </Col>\r\n            <div className=\"infoProfil\">\r\n              <h1>\r\n                {this.state.profil.firstname} {this.state.profil.lastname}\r\n              </h1>\r\n\r\n              <h3 className=\"titreNice\">{this.state.profil.staff}</h3>\r\n              <p className=\"profilPara\">{this.state.profil.adress}</p>\r\n              <p className=\"profilPara\">{this.state.profil.city}</p>\r\n\r\n              <p className=\"profilPara\">{this.state.profil.email} </p>\r\n              <p className=\"profilParafin\">{this.state.profil.phone}</p>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"monrestaurant\" sm={12} md={12}>\r\n            <h1 className=\"ligne\">Mes restaurants </h1>\r\n            {this.renderMesRestau()}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"colParrainage\">\r\n            <Col md={12}>\r\n              <label className=\"demandeParrainage\">\r\n                Parrainer un Serveur et/ou Restaurateur\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du parrainé\"\r\n              className=\"inputParrainage\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.postParrainage}\r\n              className=\"buttonParrainage\"\r\n            />\r\n            <p className=\"infoParrainage\">\r\n              \" Vous êtes satisfaits : parlez-en autour de vous ! A chaque\r\n              parrainage d'un serveur ou d'un restaurateur, vous et votre ami,\r\n              gagnez 2 mois d'abonnements Premium \"\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"rowButton\">\r\n          <Col xs={12} md={6} lg={6}>\r\n            <button className=\"buttonAbo\" onClick={this.infoStripe}>\r\n              Mes pourboires individuels\r\n            </button>\r\n          </Col>\r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button className=\"buttonAbo\" href=\"/cagnotte\">\r\n              Mes pourboires collectifs\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6} lg={6}>\r\n            <Button className=\"lienCommentaire\" href=\"/monAbonnement\">\r\n              Souscrire l'abonnement premium\r\n            </Button>\r\n          </Col>\r\n          <Col classeName=\"colModifier\" md={6} lg={6}>\r\n            <Link to=\"/modifierMonProfil\" className=\"modif\">\r\n              <button className=\"buttonModifier lienCommentaire\">\r\n                Modifier mon profil\r\n              </button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button className=\"lienCommentaire\" href=\"/mesTips\">\r\n              Mes commentaires\r\n            </Button>\r\n          </Col>\r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button className=\"lienCommentaire\" href=\"/mesHistoriques\">\r\n              Mes pourboires encaissés\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{this.renderCompteReferent()}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/monprofil\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.handleInput}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.handleInput}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.addLogin}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      city: this.state.city,\r\n      adress: this.state.adress,\r\n      staff: this.state.staff,\r\n      date: this.state.date,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n      password: this.state.password,\r\n      acceptControl: this.state.acceptControl,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"inscr\">\r\n        <Row className=\"RowInscr\">\r\n          <Col md={12} className=\"Titre\" sm={12}>\r\n            <h1 className=\"titreh1\">Créer mon compte </h1>\r\n            <p className=\"Titrep\">\r\n              Merci de remplir les informations ci-dessous pour finaliser la\r\n              création de votre compte.\r\n            </p>\r\n          </Col>\r\n          <Row className=\"centerInscr\">\r\n            <Col md={9}>\r\n              <Form onSubmit={this.addNewRegister}>\r\n                <Form.Group controlId=\"lastname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nom\"\r\n                    name=\"lastname\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.lastname}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"firstname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Prénom\"\r\n                    name=\"firstname\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.firstname}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"date\">\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    placeholder=\"JJMMAAAA\"\r\n                    name=\"date\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.date}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"adress\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Adresse\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.adress}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"city\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ville\"\r\n                    name=\"city\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.city}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"phone\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Telephone(Facultatif)\"\r\n                    name=\"phone\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.phone}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"staff\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    type=\"text\"\r\n                    name=\"staff\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.staff}\r\n                    className=\"tailleInscr\"\r\n                  >\r\n                    <option>-</option>\r\n                    <option>Commis</option>\r\n                    <option>Chef de rang</option>\r\n                    <option>Maître d'hôtel</option>\r\n                    <option>Barman</option>\r\n                    <option>Cuisinier</option>\r\n                    <option>Accueil</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Control\r\n                    type=\"mail\"\r\n                    placeholder=\"Email \"\r\n                    name=\"email\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.email}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.password}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptControl\"\r\n                    label=\"J'ai lu et j'accepte les CGU et CGV\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.acceptControl}\r\n                    required\r\n                  />\r\n\r\n                  <a\r\n                    className=\"cgvLink\"\r\n                    href=\"/CGV_TIPTOTHANK.pdf\"\r\n                    target=\"_blanck\"\r\n                  >\r\n                    CGU & CGV\r\n                  </a>\r\n                </Form.Group>\r\n                <Row className=\"centerInscr\">\r\n                  <Col md={5} className=\"centerInscr\">\r\n                    <Button\r\n                      className=\"connectServeur\"\r\n                      variant=\"primary\"\r\n                      block\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        if (!this.state.acceptControl) {\r\n                          this.setState({\r\n                            message:\r\n                              \"Veuillez accepter les conditions générales d'utilisations.\",\r\n                          });\r\n                        } else {\r\n                          this.addNewRegister();\r\n                        }\r\n                      }}\r\n                    >\r\n                      S'inscrire\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n\r\n              <p className=\"annonce\">\r\n                *TIPOURBOIRE est responsable du traitement des données\r\n                personnelles collectées sur ce site. Elles sont collectées aux\r\n                fins de : l'exécution du contrat/vous informer de nos nouveautés\r\n                et actualités/à des fins statistiques, les bases légales\r\n                respectives des traitements pouvant être l'exécution du contrat,\r\n                l'intérêt légitime, ou le consentement. Pour plus d'informations\r\n                voir notre politique de confidentialité.\r\n              </p>\r\n              <p>{this.state.message}</p>\r\n            </Col>\r\n          </Row>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import React, { Component, useReducer } from \"react\";\nimport \"./inscriptionParrainage.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { Link } from \"react-router-dom\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nclass InscriptionParrainage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  addNewRegister = (e) => {\n    e.preventDefault();\n    const data = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      city: this.state.city,\n      adress: this.state.adress,\n      staff: this.state.staff,\n      date: this.state.date,\n      email: this.state.email,\n      phone: this.state.phone,\n      password: this.state.password,\n    };\n\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      \"X-Requested-With\": \"XMLHttpRequest\",\n    });\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: headers,\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/inscriptionParrainage\", options)\n      .then((response) => {\n        return response.json();\n      })\n\n      .then(\n        (responseObject) => {\n         \n          this.setState({ message: responseObject.message });\n        \n        },\n\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  render() {\n    return (\n      <Container className=\"inscr\">\n        \n          <Col md={12} className=\"Titre\" sm={12}>\n            <h1 className=\"titreh1\">\n              Vous avez été parrainé, crée votre compte afin de profiter de\n              votre offre.{\" \"}\n            </h1>\n            <p className=\"Titrep\">\n              Merci de remplir les informations ci-dessous pour finaliser la\n              création de votre compte.\n            </p>\n            </Col>\n           <Row className='centerInscr'>\n             <Col md={8}>\n              <Form.Group controlId=\"lastname\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Nom\"\n                  name=\"lastname\"\n                  onChange={this.handleInput}\n                  value={this.state.lastname}\n                 \n                />\n              </Form.Group>\n              <Form.Group controlId=\"firstname\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Prénom\"\n                  name=\"firstname\"\n                  onChange={this.handleInput}\n                  value={this.state.firstname}\n               \n                />\n              </Form.Group>\n              <Form.Group controlId=\"date\">\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Date de naissance\"\n                  name=\"date\"\n                  onChange={this.handleInput}\n                  value={this.state.date}\n                  \n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"adress\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Adresse\"\n                  name=\"adress\"\n                  onChange={this.handleInput}\n                  value={this.state.adress}\n                \n                />\n              </Form.Group>\n              <Form.Group controlId=\"city\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Ville\"\n                  name=\"city\"\n                  onChange={this.handleInput}\n                  value={this.state.city}\n               \n                />\n              </Form.Group>\n              <Form.Group controlId=\"phone\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Telephone(Facultatif)\"\n                  name=\"phone\"\n                  onChange={this.handleInput}\n                  value={this.state.phone}\n                \n                />\n              </Form.Group>\n              <Form.Group controlId=\"staff\">\n                <Form.Control\n                  as=\"select\"\n                  type=\"text\"\n                  name=\"staff\"\n                  onChange={this.handleInput}\n                  value={this.state.staff}\n                \n                >\n                  <option>-</option>\n                  <option>Commis</option>\n                  <option>Chef de rang</option>\n                  <option>Maître d'hôtel</option>\n                  <option>Barman</option>\n                  <option>Cuisinier</option>\n                  <option>Accueil</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Control\n                  type=\"mail\"\n                  placeholder=\"Email \"\n                  name=\"email\"\n                  onChange={this.handleInput}\n                  value={this.state.email}\n                  \n                />\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  onChange={this.handleInput}\n                  value={this.state.password}\n              \n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicCheckbox\">\n           \n                  <a\n                    className=\"cgvLink\"\n                    href=\"/CGV_TIPTOTHANK.pdf\"\n                    target=\"_blanck\"\n                  >\n                    J'ai lu et j'accepte les CGU et CGV\n                  </a>\n             \n              </Form.Group>\n              <Row className='centerInscr'>\n              <Col md={5}>\n              <Button\n                className=\"connectServeur\"\n                variant=\"primary\"\n                block\n                type=\"submit\"\n                onClick={this.addNewRegister}\n              >\n                S'inscrire\n              </Button>\n              </Col>\n              </Row>\n              <p>{this.state.message}</p>\n              </Col>\n              </Row>\n          \n         \n      \n      </Container>\n    );\n  }\n}\nexport default InscriptionParrainage;\n","import React, { Component } from \"react\";\r\nimport \"./mesTips.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass mesComs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mesComs: { commentaires: [] },\r\n    };\r\n  }\r\n\r\n  getMesCommentaires = () => {\r\n    console.log(\"coucou\");\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mesCommentaires\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const mesCommentaires = responseObject;\r\n\r\n          this.setState({ mesComs: mesCommentaires });\r\n\r\n          console.log(this.state.mesComs);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderMesCommentaires = () => {\r\n    if (!this.state.mesComs.commentaires.length ) {\r\n      return <h4 className=\"Nocoms\">Vous n'avez pas encore de commentaires</h4>;\r\n    }else {\r\n    return this.state.mesComs.commentaires.map((element, index) => (\r\n      <div className=\"divCom\" key={index}>\r\n        <div className=\"nomPrenom\">\r\n          <h2 className=\"prenomCom\">{element.prenom}</h2>{\" \"}\r\n          <h2 className=\"nomCom\">{element.nom} </h2>\r\n        </div>\r\n        <div>\r\n          <p className=\"statut2\">{element.texte}</p>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }};\r\n  \r\n\r\n  componentDidMount() {\r\n    this.getMesCommentaires();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesComs\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className='titreComs'>Mes commentaires</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"commentaireBackground\">\r\n          <Col>{this.renderMesCommentaires()}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default mesComs;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport \"./modifierMonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport storage from \"../firebase\";\r\n\r\nfunction UploadPicture() {\r\n  const [imageStorage, setImageStorage] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const uploadpicture = (e) => {\r\n    if (imageStorage == null) return;\r\n    storage\r\n      .ref(`/PictureServeur/${imageStorage.name}`)\r\n      .put(imageStorage)\r\n      .on(\"state_changed\", alert(\"Votre logo a bien été enregistré\"), alert);\r\n  };\r\n\r\n  const getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {},\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/editlogo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          setMessage(responseObject.message);\r\n          const headers = new Headers({\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            \"Content-Type\": \"application/json\",\r\n            \"X-Requested-With\": \"XMLHttpRequest\",\r\n          });\r\n\r\n          const options = {\r\n            method: \"GET\",\r\n            headers: headers,\r\n          };\r\n\r\n          fetch(\r\n            \"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\",\r\n            options\r\n          )\r\n            .then((response) => {\r\n              return response.json();\r\n            })\r\n            .then(\r\n              (responseObject) => {\r\n                setImageStorage(responseObject.picture);\r\n              },\r\n\r\n              (error) => {\r\n                console.log(error);\r\n              }\r\n            );\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  useEffect(() => {\r\n    getMonProfil();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={modifProfilLogo} className=\"formLogo\">\r\n        <img\r\n          className=\"serveurPicture\"\r\n          src={\"https://back-end.osc-fr1.scalingo.io/\" + imageStorage}\r\n        ></img>\r\n        <br />\r\n        <br />\r\n        <input\r\n          className=\"chargePic\"\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={(e) => {\r\n            setImageStorage(e.target.files[0]);\r\n          }}\r\n        />\r\n\r\n        <button className=\"button\" type=\"submit\" onClick={uploadpicture}>\r\n          Télécharger\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      serveur: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let serveur = this.state.serveur;\r\n    serveur[event.target.name] = event.target.value;\r\n    this.setState({\r\n      serveur: serveur,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataServeur = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/dataProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const serveurInfo = responseObject;\r\n          this.setState({ serveur: serveurInfo, object: serveurInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editserveur = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      serveur: this.state.serveur,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/editlogo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.postDataServeur();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.postDataServeur();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={{ span: 12, offset: 3 }} className=\"titreModif\">\r\n            <p>Modification du profil</p>\r\n\r\n            <Form>\r\n              <Form.Group controlId=\"formGroupName\">\r\n                <Form.Control\r\n                  name=\"lastname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nom\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.lastname}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formGroupPrenom\">\r\n                <Form.Control\r\n                  name=\"firstname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Prénom\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.firstname}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formAdresse\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adresse\"\r\n                  name=\"adress\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.adress}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formVille\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ville\"\r\n                  name=\"city\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.city}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formTel\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Telephone(Facultatif)\"\r\n                  name=\"phone\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.phone}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPoste\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"text\"\r\n                  name=\"staff\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.staff}\r\n                >\r\n                  <option>-</option>\r\n                  <option>Commis</option>\r\n                  <option>Chef de rang</option>\r\n                  <option>Maître d'hôtel</option>\r\n                  <option>Barman</option>\r\n                  <option>Cuisinier</option>\r\n                  <option>Accueil</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <UploadPicture />\r\n\r\n            <Button\r\n              className=\"submitButton\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={this.editserveur}\r\n            >\r\n              Mettre à jour mon profil\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Card details\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./checkouForm.css\";\r\nimport CardSection from \"../cardSection/CardSection\";\r\nimport Form from \"react-bootstrap/Form\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\r\n          \"https://back-end.osc-fr1.scalingo.io/serveur/createsubscription\",\r\n          {\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n              customerId: customerId,\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: \"price_1Hr1j9Hoh2Vgz5QdvrI9FBDN\",\r\n            }),\r\n          }\r\n        )\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      <button className=\"submitButton\" disabled={!stripe}>\r\n        Devenir un Serveur Premium\r\n      </button>\r\n      <Form.Check\r\n        className=\"checkboxRet\"\r\n        type=\"checkbox\"\r\n        name=\"retractation\"\r\n        label=\" Je renonce à mon droit de rétractation afin que le service commence immédiatement \"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./monAbonnement.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport CheckoutForm from \"../monAbonnement/checkoutForm\";\r\n\r\n//import \"./monAbonnement.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium serveur TIPOURBOIRE</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./barreMenu.css\";\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n        <Row className=\"partie1\">\r\n          <Dropdown className=\"nav justify-content-right\">\r\n            <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n              <img src=\"/images/user.png\" />\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"/MonProfil\">Profil</Dropdown.Item>\r\n              <Dropdown.Item\r\n                  onClick={() => {\r\n                    window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\"\r\n                >\r\n                  Déconnexion\r\n                </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <Col className=\"logoPartie1\" md={12}>\r\n            <img src=\"/images/logoJaune.png\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      )\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n      <Row className=\"partie1\">\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/images/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/inscription\">Inscription</Dropdown.Item>\r\n            <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Col className=\"logoPartie1\" md={12}>\r\n          <img src=\"/images/logoJaune.png\" />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n    console.log(\"coucou\", this.props.login);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n} \r\nexport default Barremenu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/password-renew\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button onClick={this.passwordRenew} className=\"renewButton\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/password-reset\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <Button onClick={this.passwordReset} className=\"resetButton\">\r\n              Confirmer\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass footer extends Component {\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"mentionsLégales.pdf\" className=\"textFooter\">\r\n                Mentions Légales\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"cgu-cgv/CGV_TIPTOTHANK.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                CGU\r\n              </Nav.Link>\r\n\r\n              <Nav.Link\r\n                href=\"cgu-cgv/CGV_TIPTOTHANK.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Confidentialité\r\n              </Nav.Link>\r\n              <Nav.Link href=\"\" className=\"textFooter\">\r\n                Cookies\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#pricing\"\r\n                className=\"textFooter\"\r\n                onClick={this.deleteProfil}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/* <Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link\r\n                eventKey={2}\r\n                href=\"https://tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport \"./meshistoriques.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass mesHistoriques extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { profil: { restaurantName: {} }, wallet: 1, history: [] };\r\n  }\r\n   \r\n  \r\n\r\n  \r\n  renderMesHistory = () => {\r\n    if (Array.isArray(this.state.profil.history)) {\r\n      if (this.state.profil.history.length > 0) {\r\n        return this.state.profil.history.map((element, index) => {\r\n          return (\r\n            <tr>\r\n            <td type=\"text\" id=\"montant\" name=\"montant\">\r\n              {\" \"}\r\n              {element.amount / 100}€\r\n            </td>\r\n            <td type=\"date\" id=\"date\" name=\"date\">\r\n              {\" \"}\r\n              {new Date(element.date).toLocaleDateString()}\r\n            </td>\r\n          </tr>\r\n          );\r\n        });\r\n      } else {\r\n        return (\r\n          <p className=\"pourboire\">\r\n            Vous n'avez reçu aucun pourboire pour l'instant.\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(this.state.profil);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n      this.getMonProfil();\r\n  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesHisto\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className='titreHisto'>Mes Historiques de pourboires</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row class=\"table-responsive-sm\">\r\n        <Table class=\"table-responsive-sm\" striped hover>\r\n        <thead>\r\n      <tr>\r\n        <th>Montant</th>\r\n        <th>Date</th>\r\n  \r\n      </tr>\r\n      </thead>\r\n        <tbody>\r\n        {this.renderMesHistory()}\r\n        </tbody>\r\n      </Table>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default mesHistoriques;\r\n","import { Alert } from \"bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./CagnotteCollective.css\";\r\n\r\nclass CagnotteCollective extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      document: {},\r\n      amount: 0,\r\n    };\r\n  }\r\n  addBankAccount = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      adress: this.state.adress,\r\n      password: this.state.password,\r\n      city: this.state.city,\r\n      region: this.state.region,\r\n      zip: this.state.zip,\r\n      iban: this.state.iban,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mangoBank\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        if (responseData.Type === \"param_error\") {\r\n          window.alert(\"Une erreur s'est produite, veuillez réessayer.\");\r\n        } else {\r\n          window.alert(\r\n            \"Votre compte bancaire à bien été enregistré vous pouvez maintenant retirer votre argent.\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  payoutMangoPay = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      adress: this.state.adress,\r\n      password: this.state.password,\r\n      city: this.state.city,\r\n      region: this.state.region,\r\n      zip: this.state.zip,\r\n      iban: this.state.iban,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/payoutMango\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n      });\r\n  };\r\n\r\n  change = (event) => {\r\n    let document = this.state.document;\r\n    document[event.target.name] = event.target.value;\r\n    this.setState({\r\n      document: document,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  getWalletAmount = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"get\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/getWalet\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ amount: responseData });\r\n      });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let base64 = new FormData(e.target);\r\n\r\n    const data = base64;\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mangoKYC\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((responseData) => {\r\n        if (responseData.Type === \"param_error\") {\r\n          window.alert(\"Une erreur s'est produite, veuillez réessayer.\");\r\n        } else {\r\n          window.alert(\r\n            \"Vots documents ont bien été envoyés une réponse vous sera fourni dans les 24 heures.\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletAmount();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"cagnotteCont\">\r\n        <Row className=\"rowCagn\">\r\n          <Col>\r\n            <h1>Montant des pourboires collectifs :</h1>\r\n            <h2>\r\n              <strong>{this.state.amount / 100} euros</strong>\r\n            </h2>\r\n            <Button onClick={this.payoutMangoPay}>Retirer votre argent</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowPasDeCagn\">\r\n          <Col>\r\n            <h5>\r\n              {\" \"}\r\n              Pas encore de cagnotte pour percevoir vos pourboires collectifs ?\r\n              Suivez les étapes ci-dessous !\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowId\">\r\n          <Col>\r\n            <form onSubmit={this.onSubmit}>\r\n              <h3>Confirmation d'identité </h3>\r\n              <h5>(Recto Verso sur la même page)</h5>\r\n              <input\r\n                className=\"chargePic\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                multiple\r\n                accept=\"image/png, image/jpeg, image/jpg, image/pdf\"\r\n              />\r\n\r\n              <Button type=\"submit\">Télécharger</Button>\r\n            </form>\r\n            {this.state.message}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Votre Adresse\"\r\n                name=\"adress\"\r\n                onChange={this.handleInput}\r\n                value={this.state.adress}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Code Postal\"\r\n                name=\"zip\"\r\n                onChange={this.handleInput}\r\n                value={this.state.zip}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ville\"\r\n                name=\"city\"\r\n                onChange={this.handleInput}\r\n                value={this.state.city}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Votre région, PACA, AQUITAINE, BRETAGNE... \"\r\n                name=\"region\"\r\n                onChange={this.handleInput}\r\n                value={this.state.region}\r\n              />\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Votre IBAN, FRXXXXXXXXXXXXXXXXXX\"\r\n                name=\"iban\"\r\n                onChange={this.handleInput}\r\n                value={this.state.iban}\r\n              />\r\n            </Form>\r\n            <Button\r\n              className=\"butBankAcc\"\r\n              type=\"submit\"\r\n              onClick={this.addBankAccount}\r\n            >\r\n              Envoyez vos informations bancaires\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            {this.state.messageBA}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CagnotteCollective;\r\n","import React, { Component } from \"react\";\r\nimport \"./referent.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\n\r\nclass referent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { waiter: { tabServeur: [] }, referent: [] };\r\n  }\r\n  change = (event) => {\r\n    let referent = this.state.referent;\r\n    referent[event.target.name] = event.target.value;\r\n    this.setState({\r\n      referent: referent,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n  getReferentWallet = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/referentWallet\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const amount = responseObject;\r\n          this.setState({ amount: amount });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/waiterList\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ waiter: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderMesServeurs = () => {\r\n    return this.state.waiter.tabServeur.map((element) => {\r\n      return (\r\n        <Col className=\"nameServ\" xs={12} s={12} md={6}>\r\n          <h3>\r\n            <strong>{element.serveurName}</strong>\r\n          </h3>\r\n          <br />\r\n          <Form>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Montant du transfert\"\r\n              name=\"amount\"\r\n              onChange={this.change}\r\n            />\r\n          </Form>\r\n          <Button\r\n            className=\"CollectButton\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n              const data = {\r\n                email: element.serveurMail,\r\n                amount: this.state.referent.amount,\r\n              };\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/serveur/referentTransfert\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response;\r\n                })\r\n                .then(\r\n                  (data) => {\r\n                    console.log(data);\r\n                    window.alert(\"Coucou ca à marché\");\r\n                  },\r\n\r\n                  (error) => {\r\n                    console.log(error);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            Envoyez\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n      );\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getReferentWallet();\r\n    this.getWaiterList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesHisto\">\r\n        <Row className=\"commentaireHisto\">\r\n          <Col xs={12} s={12} md={12}>\r\n            <h1>Montant du pot commun :</h1>\r\n            <h2 className=\"montantCo\">\r\n              <strong>{this.state.amount / 100} euros</strong>\r\n            </h2>\r\n            <h1>Liste des Serveurs:</h1>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"rowServeurCo\">{this.renderMesServeurs()}</Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default referent;\r\n","import React, { Component } from \"react\";\r\nimport \"../App/App.css\";\r\nimport Profil from \"../monProfil/monProfil\";\r\nimport Connexion from \"../connexion/connexion\";\r\nimport Inscription from \"../inscription/inscription\";\r\nimport InscriptionParrainage from \"../inscriptionParrainage/inscriptionParrainage\";\r\nimport MesTips from \"../mesTips/mesTips\";\r\nimport ModifierMonProfil from \"../modifierMonProfil/modifierMonProfil\";\r\nimport monAbonnement from \"../monAbonnement/monAbonnement\";\r\nimport Barremenu from \"../../Assets/barreMenu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Footer from \"../../Assets/footer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CardSection from \"../cardSection/CardSection\";\r\nimport mesComs from \"../mesTips/mesTips\";\r\nimport mesHisto from \"../MesHistoriques/mesHistoriques\";\r\nimport CagnotteCollective from \"../CagnotteCollective/CagnotteCollective\";\r\nimport Referent from \"../Referent/referent\";\r\n\r\n/* Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"main-container\">\r\n          <Barremenu setLogin={this.setLogin} login={this.state.login} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route\r\n              path=\"/inscriptionParrainage\"\r\n              component={InscriptionParrainage}\r\n            />\r\n            <Route path=\"/monProfil\" component={Profil} />\r\n            <Route path=\"/modifierMonProfil\" component={ModifierMonProfil} />\r\n            <Route path=\"/mesTips\" component={mesComs} />\r\n            <Route path=\"/mesHistoriques\" component={mesHisto} />\r\n            <Route path=\"/monAbonnement\" component={monAbonnement} />\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/cagnotte\" component={CagnotteCollective} />\r\n            <Route path=\"/referent\" component={Referent} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}