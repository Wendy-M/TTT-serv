{"version":3,"sources":["Components/monProfil/monProfil.js","Components/connexion/connexion.js","Components/inscription/inscription.js","Components/mesTips/mesTips.js","Components/modifierMonProfil/modifierMonProfil.js","Components/cardSection/CardSection.js","Components/monAbonnement/checkoutForm.js","Components/monAbonnement/monAbonnement.js","Assets/barreMenu.js","Components/PasswordRenew/PasswordRenew.js","Components/PasswordReset/PasswordReset.js","Assets/footer.js","Components/MesHistoriques/mesHistoriques.js","Components/CagnotteCollective/CagnotteCollective.js","Components/Referent/referent.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["Profil","props","abonnement","ID","state","profil","stripeId","console","log","alert","renderMesHistory","Array","isArray","history","length","map","element","index","className","key","amount","date","getMonProfil","headers","Headers","Authorization","localStorage","getItem","fetch","method","then","response","json","responseObject","monProfil","setState","error","deleteProfil","e","window","confirm","preventDefault","data","userId","options","body","JSON","stringify","message","push","deleteAffiliation","getWaiterList","infoStripe","responseData","open","getRestaurantList","restaurant","err","renderCompteReferent","mangoWalletReferent","Button","href","renderMesRestau","restaurantName","wallet","stripeUrl","this","Container","Row","Col","sm","md","s","Image","src","picture","roundedCircle","firstname","lastname","staff","adress","city","email","phone","xs","lg","onClick","classeName","to","Component","Connexion","handleInput","target","name","value","addLogin","password","token","setItem","setLogin","Form","Label","htmlFor","srOnly","InputGroup","FormControl","id","placeholder","onChange","Control","type","Inscription","addNewRegister","Group","controlId","as","Check","label","variant","block","mesComs","getMesCommentaires","mesCommentaires","renderMesCommentaires","commentaires","prenom","nom","texte","modifierMonProfil","change","event","serveur","postDataServeur","serveurInfo","object","editserveur","modifProfilLogo","FormData","span","offset","onSubmit","CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","createSubscription","a","customerId","paymentMethodId","priceId","result","subscription","cardElement","getElement","CardElement","createPaymentMethod","card","paymentMethod","disabled","stripePromise","loadStripe","Abonnement","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","Menu","Item","clear","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","footer","Navbar","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","mesHistoriques","Date","toLocaleDateString","class","Table","striped","hover","CagnotteCollective","addBankAccount","region","zip","iban","payoutMangoPay","document","getWalletAmount","referent","getReferentWallet","waiter","renderMesServeurs","tabServeur","serveurName","serveurMail","App","addEventListener","removeItem","exact","path","render","component","ModifierMonProfil","mesHisto","monAbonnement","Referent","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"ooBAkUeA,E,kDAvTb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,WAAa,WACX,IAAIC,EAAK,EAAKC,MAAMC,OAAOC,SAC3BC,QAAQC,IAAIL,GACD,OAAPA,GACFM,MAAM,2DAfS,EAoBnBC,iBAAmB,WACjB,GAAIC,MAAMC,QAAQ,EAAKR,MAAMC,OAAOQ,SAClC,OAAI,EAAKT,MAAMC,OAAOQ,QAAQC,OAAS,EAC9B,EAAKV,MAAMC,OAAOQ,QAAQE,KAAI,SAACC,EAASC,GAC7C,OACE,yBAAKC,UAAW,aAAcC,IAAKF,GACjC,uBAAGC,UAAW,aAAd,qBACkBF,EAAQI,OAD1B,aACuCJ,EAAQK,KAD/C,SAQJ,uBAAGH,UAAU,aAAb,wDAlCW,EAyCnBI,aAAe,WACb,IAAMC,EAAU,IAAIC,QAAQ,CAC1BC,cAAe,UAAYC,aAAaC,QAAQ,SAChD,eAAgB,mBAChB,mBAAoB,mBAQtBC,MAAM,yDALU,CACdC,OAAQ,MACRN,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,IAAMC,EAAYD,EAClB,EAAKE,SAAS,CAAE9B,OAAQ6B,IACxB3B,QAAQC,IAAI,EAAKJ,MAAMC,WAGzB,SAAC+B,GACC7B,QAAQC,IAAI4B,OAjED,EAsEnBC,aAAe,SAACC,GACdC,OAAOC,QACL,sFAEFF,EAAEG,iBACF,IAAMC,EAAO,CACXC,OAAQjB,aAAaC,QACnB,UAGFtB,OAAQ,EAAKD,MAAMC,QAGfkB,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,WAG5CiB,EAAU,CACdf,OAAQ,SACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,sDAAuDgB,GAC1Dd,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEa,QAASf,EAAee,UACxCvC,MACE,2EAEF,EAAKR,MAAMY,QAAQoC,KAAK,iBAG1B,SAACb,GACC7B,QAAQC,IAAI4B,OA5GD,EAiHnBc,kBAAoB,SAACZ,GACnB,IAEMf,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,WAG5CiB,EAAU,CACdf,OAAQ,SACRgB,KAAMC,KAAKC,UATA,IAUXxB,QAASA,GAGXK,MAAM,4DAA6DgB,GAChEd,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,EAAKkB,mBAGP,SAACf,GACC7B,QAAQC,IAAI4B,OAzID,EA6InBgB,WAAa,WACX,IAAM7B,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,WASlDC,MACE,+DAPc,CACdC,OAAQ,MAERN,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAACuB,GACLd,OAAOe,KAAKD,EAAc,cAlKb,EAsKnBE,kBAAoB,WAClB,IAAMhC,EAAU,IAAIC,QAAQ,CAC1BC,cAAe,UAAYC,aAAaC,QAAQ,WAQlDC,MACE,8DANc,CACdC,OAAQ,MACRN,QAASA,IAORO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACY,GACC,EAAKP,SAAS,CAAEqB,WAAYd,IAC5BnC,QAAQC,IAAI,EAAKJ,MAAMoD,eAEzB,SAACC,GACClD,QAAQC,IAAIiD,OA7LD,EAqMnBC,qBAAuB,WACrB,GAAI,EAAKtD,MAAMC,OAAOsD,oBACpB,OACE,kBAACC,EAAA,EAAD,CAAQ1C,UAAU,kBAAkB2C,KAAK,aAAzC,8BAxMa,EA8MnBC,gBAAkB,WAChB,OAAK,EAAK1D,MAAMoD,WAAW1C,OAOlB,EAAKV,MAAMoD,WAAWzC,KAAI,SAACC,GAChC,OACE,yBAAKE,UAAU,YACb,wBAAIA,UAAU,SAASF,EAAQ+C,oBARnC,wBAAI7C,UAAU,UAAd,4DA/MJ,EAAKd,MAAQ,CACXC,OAAQ,CAAEmD,WAAY,IACtBQ,OAAQ,EACRnD,QAAS,GACToD,UAAW,GACXT,WAAY,IAPG,E,gEAkMjBU,KAAK5C,eACL4C,KAAKX,sB,+BA8BL,OACE,kBAACY,EAAA,EAAD,CAAWjD,UAAU,WAEnB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,aACb,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,aAAaoD,GAAI,GAAIC,GAAI,IACtC,kBAACF,EAAA,EAAD,CAAKG,EAAG,EAAGD,GAAI,GAAIrD,UAAU,YAC3B,kBAACuD,EAAA,EAAD,CACEvD,UAAU,cACVwD,IACE,uCACAR,KAAK9D,MAAMC,OAAOsE,QAEpBC,eAAa,KAGjB,yBAAK1D,UAAU,cACb,4BACGgD,KAAK9D,MAAMC,OAAOwE,UADrB,IACiCX,KAAK9D,MAAMC,OAAOyE,UAGnD,wBAAI5D,UAAU,aAAagD,KAAK9D,MAAMC,OAAO0E,OAC7C,uBAAG7D,UAAU,cAAcgD,KAAK9D,MAAMC,OAAO2E,QAC7C,uBAAG9D,UAAU,cAAcgD,KAAK9D,MAAMC,OAAO4E,MAE7C,uBAAG/D,UAAU,cAAcgD,KAAK9D,MAAMC,OAAO6E,MAA7C,KACA,uBAAGhE,UAAU,iBAAiBgD,KAAK9D,MAAMC,OAAO8E,SAGpD,kBAACd,EAAA,EAAD,CAAKnD,UAAU,gBAAgBoD,GAAI,GAAIC,GAAI,IACzC,wBAAIrD,UAAU,SAAd,oBACCgD,KAAKJ,oBAKV,kBAACM,EAAA,EAAD,CAAKlD,UAAU,aACf,kBAACmD,EAAA,EAAD,CAAKe,GAAI,GAAIb,GAAI,EAAGc,GAAI,GACpB,4BAAQnE,UAAU,YAAYoE,QAASpB,KAAKd,YAA5C,+BAIF,kBAACiB,EAAA,EAAD,CAAKe,GAAI,GAAIZ,EAAG,GAAID,GAAI,EAAGc,GAAI,GAC7B,kBAACzB,EAAA,EAAD,CAAQ1C,UAAU,YAAY2C,KAAK,aAAnC,+BAMJ,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAI,EAAGc,GAAI,GAClB,kBAACzB,EAAA,EAAD,CAAQ1C,UAAU,kBAAkB2C,KAAK,kBAAzC,mCAIE,kBAACQ,EAAA,EAAD,CAAKkB,WAAW,cAAchB,GAAI,EAAGc,GAAI,GACvC,kBAAC,IAAD,CAAMG,GAAG,qBAAqBtE,UAAU,SACtC,4BAAQA,UAAU,kCAAlB,0BAIL,kBAACkD,EAAA,EAAD,KAEC,kBAACC,EAAA,EAAD,CAAKe,GAAI,GAAIZ,EAAG,GAAID,GAAI,EAAGc,GAAI,GAC7B,kBAACzB,EAAA,EAAD,CAAQ1C,UAAU,kBAAkB2C,KAAK,YAAzC,qBAIF,kBAACQ,EAAA,EAAD,CAAKe,GAAI,GAAIZ,EAAG,GAAID,GAAI,EAAGc,GAAI,GAC7B,kBAACzB,EAAA,EAAD,CAAQ1C,UAAU,kBAAkB2C,KAAK,mBAAzC,iCAKJ,kBAACO,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKnD,UAAU,YAAYkE,GAAI,GAAIZ,EAAG,GAAID,GAAI,EAAGc,GAAI,GAGhDnB,KAAKR,8B,GA/SG+B,a,+BCqHNC,G,wDAnHb,WAAYzF,GAAQ,IAAD,8BACjB,cAAMA,IAGR0F,YAAc,SAACrD,GACb,EAAKH,SAAL,eAAiBG,EAAEsD,OAAOC,KAAOvD,EAAEsD,OAAOE,SALzB,EAOnBC,SAAW,SAACzD,GACVA,EAAEG,iBACF,IAAMC,EAAO,CACXwC,MAAO,EAAK9E,MAAM8E,MAClBc,SAAU,EAAK5F,MAAM4F,UAGjBzE,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,mBAGhBoB,EAAU,CACdf,OAAQ,OACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,qDAAsDgB,GACzDd,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAACuB,GACL,EAAKlB,SAAS,CAAEa,QAASK,EAAaL,UAElCK,EAAa4C,QACfvE,aAAawE,QAAQ,QAAS7C,EAAa4C,OAC3CvE,aAAawE,QAAQ,SAAU7C,EAAaV,QAC5C,EAAK1C,MAAMkG,UAAS,GACpB,EAAKlG,MAAMY,QAAQoC,KAAK,mBAnC9B,EAAK7C,MAAQ,CAAE8E,MAAO,IAFL,E,qDA2CjB,OACE,kBAACf,EAAA,EAAD,CAAWjD,UAAU,cACnB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,cACb,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,iBAAiBoD,GAAI,GAAIC,GAAI,EAAGc,GAAI,IACjD,wBAAInE,UAAU,kBAAd,sBACA,wBAAIA,UAAU,kBAAd,mBACA,kBAACkF,EAAA,EAAD,CAAMlF,UAAU,gBACd,kBAACkF,EAAA,EAAKhC,IAAN,CAAUlD,UAAU,sBAClB,kBAACmD,EAAA,EAAD,CAAKe,GAAI,GAAIZ,EAAG,IACd,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,QAAQ,uBAAuBC,QAAM,GAAjD,YAGA,kBAACC,EAAA,EAAD,CAAYtF,UAAU,QACpB,kBAACuF,EAAA,EAAD,CACEZ,KAAK,QACLa,GAAG,uBACHC,YAAY,QACZC,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM8E,UAIxB,kBAACb,EAAA,EAAD,CAAKG,EAAG,GAAItD,UAAU,eACpB,kBAACkF,EAAA,EAAKC,MAAN,CAAYC,QAAQ,kBAAkBC,QAAM,GAA5C,gBAGA,kBAACH,EAAA,EAAKS,QAAN,CACEhB,KAAK,WACL3E,UAAU,cACVwF,GAAG,kBACHC,YAAY,WACZG,KAAK,WACLF,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM4F,YAGtB,kBAAC3B,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,CAAMkB,GAAG,kBACP,uBAAGtE,UAAU,aAAb,8BAIJ,kBAACmD,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC,IAAD,CAAMiB,GAAG,cACP,kBAAC5B,EAAA,EAAD,CACEkD,KAAK,SACL5F,UAAU,iBACVoE,QAASpB,KAAK6B,UAHhB,kBAUJ,kBAAC1B,EAAA,EAAD,CAAKnD,UAAU,YAAYkE,GAAI,IAC5BlB,KAAK9D,MAAM4C,QACZ,uBAAG9B,UAAU,UAAb,sBAEE,kBAAC,IAAD,CAAMA,UAAU,SAASsE,GAAG,gBACzB,GADH,6BAQV,kBAACnB,EAAA,EAAD,CAAKnD,UAAU,mBAAmBqD,GAAI,U,GA9GxBkB,cCmMTsB,G,wDAnMb,WAAY9G,GAAQ,IAAD,8BACjB,cAAMA,IAIR0F,YAAc,SAACrD,GACb,EAAKH,SAAL,eAAiBG,EAAEsD,OAAOC,KAAOvD,EAAEsD,OAAOE,SANzB,EAQnBkB,eAAiB,SAAC1E,GAChBA,EAAEG,iBACF,IAAMC,EAAO,CACXmC,UAAW,EAAKzE,MAAMyE,UACtBC,SAAU,EAAK1E,MAAM0E,SACrBG,KAAM,EAAK7E,MAAM6E,KACjBD,OAAQ,EAAK5E,MAAM4E,OACnBD,MAAO,EAAK3E,MAAM2E,MAClB1D,KAAM,EAAKjB,MAAMiB,KACjB6D,MAAO,EAAK9E,MAAM8E,MAClBC,MAAO,EAAK/E,MAAM+E,MAClBa,SAAU,EAAK5F,MAAM4F,UAGjBzE,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,mBAGhBoB,EAAU,CACdf,OAAQ,OACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,wDAAyDgB,GAC5Dd,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEa,QAASf,EAAee,aAG1C,SAACZ,GACC7B,QAAQC,IAAI4B,OA1ClB,EAAKhC,MAAQ,GAFI,E,qDAiDjB,OACE,kBAAC+D,EAAA,EAAD,CAAWjD,UAAU,SACrB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,YACb,kBAACmD,EAAA,EAAD,CAAKE,GAAI,EAAGrD,UAAU,QAASoD,GAAI,IAG7B,wBAAIpD,UAAU,WAAd,wBACA,uBAAGA,UAAU,UAAb,+FAGF,kBAACkF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKa,MAAN,CAAYC,UAAU,YAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,MACZd,KAAK,WACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM0E,SAClB5D,UAAU,iBAGd,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,aAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,YACZd,KAAK,YACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAMyE,UAClB3D,UAAU,iBAGd,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,QAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,oBACZd,KAAK,OACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAMiB,KAClBH,UAAU,iBAId,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,UAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,UACZd,KAAK,SACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM4E,OAClB9D,UAAU,iBAGd,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,QAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,QACZd,KAAK,OACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM6E,KAClB/D,UAAU,iBAGd,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,SAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,wBACZd,KAAK,QACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM+E,MAClBjE,UAAU,iBAGd,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,SAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEM,GAAG,SACHL,KAAK,OACLjB,KAAK,QACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM2E,MAClB7D,UAAU,eAEV,qCACA,0CACA,gDACA,wDACA,0CACA,6CACA,6CAGJ,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,SAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,SACZd,KAAK,QACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM8E,MAClBhE,UAAU,iBAGd,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,YAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,WACLH,YAAY,WACZd,KAAK,WACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM4F,SAClB9E,UAAU,iBAGd,kBAACkF,EAAA,EAAKa,MAAN,CAAYC,UAAU,qBACpB,kBAACd,EAAA,EAAKgB,MAAN,CACEN,KAAK,WACLO,MAAM,2DAIV,kBAACzD,EAAA,EAAD,CACE1C,UAAU,iBACVoG,QAAQ,UACRC,OAAK,EACLT,KAAK,SACLxB,QAASpB,KAAK8C,gBALhB,cASA,2BAAI9C,KAAK9D,MAAM4C,WAIrB,kBAACqB,EAAA,EAAD,CAAKnD,UAAU,oBAAoBqD,GAAI,U,GA7LrBkB,cC4EX+B,G,wDA9Eb,WAAYvH,GAAQ,IAAD,8BACjB,cAAMA,IAMRwH,mBAAqB,WACnBlH,QAAQC,IAAI,UAEZ,IAAMe,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,iBACpBC,cAAe,UAAYC,aAAaC,QAAQ,WASlDC,MAAM,+DANU,CACdC,OAAQ,MAERN,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,IAAMyF,EAAkBzF,EAExB,EAAKE,SAAS,CAAEqF,QAASE,IAEzBnH,QAAQC,IAAI,EAAKJ,MAAMoH,YAGzB,SAACpF,GACC7B,QAAQC,IAAI4B,OApCD,EAwCnBuF,sBAAwB,WACtB,OAAK,EAAKvH,MAAMoH,QAAQI,aAAa9G,OAG9B,EAAKV,MAAMoH,QAAQI,aAAa7G,KAAI,SAACC,EAASC,GAAV,OACzC,yBAAKC,UAAU,SAASC,IAAKF,GAC3B,yBAAKC,UAAU,aACb,wBAAIA,UAAU,aAAaF,EAAQ6G,QAAa,IAChD,wBAAI3G,UAAU,UAAUF,EAAQ8G,IAAhC,MAEF,6BACE,uBAAG5G,UAAU,WAAWF,EAAQ+G,YAT7B,wBAAI7G,UAAU,UAAd,2CAxCT,EAAKd,MAAQ,CACXoH,QAAS,CAAEI,aAAc,KAHV,E,gEA2DjB1D,KAAKuD,uB,+BAIL,OACE,kBAACtD,EAAA,EAAD,CAAWjD,UAAU,WACnB,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAInD,UAAU,aAAd,sBAGJ,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,yBACb,kBAACmD,EAAA,EAAD,KAAMH,KAAKyD,+B,GAxEClC,cCyOPuC,G,wDAvOb,WAAY/H,GAAQ,IAAD,8BACjB,cAAMA,IAMRgI,OAAS,SAACC,GACR,IAAIC,EAAU,EAAK/H,MAAM+H,QACzBA,EAAQD,EAAMtC,OAAOC,MAAQqC,EAAMtC,OAAOE,MAC1C,EAAK3D,SAAS,CACZgG,QAASA,KAXM,EAgBnBC,gBAAkB,WAChB,IAAM7G,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAEhBC,cAAe,UAAYC,aAAaC,QAAQ,WAE5Ce,EAAO,CAEXC,OAAQjB,aAAaC,QAAQ,WAEzBiB,EAAU,CACdf,OAAQ,OACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,0DAA2DgB,GAC9Dd,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,IAAMoG,EAAcpG,EACpB,EAAKE,SAAS,CAAEgG,QAASE,EAAaC,OAAQD,IAC9C9H,QAAQC,IAAI,EAAKJ,UAGnB,SAACgC,GACC7B,QAAQC,IAAI4B,OA5CD,EAiDnBmG,YAAc,SAACjG,GACbA,EAAEG,iBACF,IAAMC,EAAO,CACXC,OAAQjB,aAAaC,QACnB,UAGFwG,QAAS,EAAK/H,MAAM+H,SAGhB5G,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAEhBC,cAAe,UAAYC,aAAaC,QAAQ,WAG5CiB,EAAU,CACdf,OAAQ,MACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,oDAAqDgB,GACxDd,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEa,QAASf,EAAee,aAG1C,SAACZ,GACC7B,QAAQC,IAAI4B,OAjFD,EAqFnBoG,gBAAkB,SAAClG,GACjBA,EAAEG,iBACF,IAAMC,EAAO,IAAI+F,SAASnG,EAAEsD,QAEtBrE,EAAU,IAAIC,QAAQ,CAC1B,mBAAoB,iBACpBC,cAAe,UAAYC,aAAaC,QAAQ,WASlDC,MAAM,wDANU,CACdC,OAAQ,MACRgB,KAAMH,EACNnB,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEa,QAASf,EAAee,UACxC,EAAKoF,qBAGP,SAAChG,GACC7B,QAAQC,IAAI4B,OA9GlB,EAAKhC,MAAQ,CACX+H,QAAS,IAHM,E,gEAsHjBjE,KAAKkE,oB,+BAIL,OACE,yBAAKlH,UAAU,uBACb,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAI,CAAEmE,KAAM,GAAIC,OAAQ,GAAKzH,UAAU,cAE5C,qDAGF,kBAACkF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKa,MAAN,CAAYC,UAAU,iBAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEhB,KAAK,WACLiB,KAAK,OACLH,YAAY,MACZC,SAAU1C,KAAK+D,OACfnC,MAAO5B,KAAK9D,MAAM+H,QAAQrD,YAG9B,kBAACsB,EAAA,EAAKa,MAAN,CAAYC,UAAU,mBAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEhB,KAAK,YACLiB,KAAK,OACLH,YAAY,YACZC,SAAU1C,KAAK+D,OACfnC,MAAO5B,KAAK9D,MAAM+H,QAAQtD,aAG9B,kBAACuB,EAAA,EAAKa,MAAN,CAAYC,UAAU,eAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,UACZd,KAAK,SACLe,SAAU1C,KAAK+D,OACfnC,MAAO5B,KAAK9D,MAAM+H,QAAQnD,UAG9B,kBAACoB,EAAA,EAAKa,MAAN,CAAYC,UAAU,aAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,QACZd,KAAK,OACLe,SAAU1C,KAAK+D,OACfnC,MAAO5B,KAAK9D,MAAM+H,QAAQlD,QAG9B,kBAACmB,EAAA,EAAKa,MAAN,CAAYC,UAAU,WAEpB,kBAACd,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,wBACZd,KAAK,QACLe,SAAU1C,KAAK+D,OACfnC,MAAO5B,KAAK9D,MAAM+H,QAAQhD,SAG9B,kBAACiB,EAAA,EAAKa,MAAN,CAAYC,UAAU,aAEhB,kBAACd,EAAA,EAAKS,QAAN,CACEM,GAAG,SACHL,KAAK,OACLjB,KAAK,QACLe,SAAU1C,KAAK+D,OACfnC,MAAO5B,KAAK9D,MAAM+H,QAAQpD,OAE1B,qCACA,0CACA,gDACA,wDACA,0CACA,6CACA,8CAKV,6BACE,0BAAM6D,SAAU1E,KAAKsE,gBAAiBtH,UAAU,YAC9C,yBACEA,UAAU,iBACVwD,IAAK,wCAA0CR,KAAK9D,MAAM+H,QAAQxD,UAEpE,6BACA,6BACA,2BAAOzD,UAAU,YAAY4F,KAAK,OAAOjB,KAAK,SAE9C,4BAAQ3E,UAAU,SAAS4F,KAAK,UAAhC,uBAKJ,kBAAClD,EAAA,EAAD,CACE1C,UAAU,eACVoG,QAAQ,UACRR,KAAK,SACLxB,QAASpB,KAAKqE,aAJhB,sC,GAzNwB9C,c,iDCD1BoD,G,MAAuB,CAC3BC,MAAO,CACLC,KAAM,CACJC,MAAO,UACPC,WAAY,0CACZC,cAAe,cACfC,SAAU,OACV,gBAAiB,CACfH,MAAO,YAGXI,QAAS,CACPJ,MAAO,UACPK,UAAW,cAiBFC,E,uKAXX,OACE,6BACE,8CAEE,kBAAC,cAAD,CAAa1G,QAASiG,U,GANNpD,aCpBX,SAAS8D,IACtB,IAAMC,EAASC,sBACTC,EAAWC,wBACXC,EAAY,uCAAG,WAAO1B,GAAP,cA2CV2B,EA3CU,SAAAC,EAAA,yDA2CVD,EA3CU,YA2CoD,IAAzCE,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACzD,OACErI,MAAM,kEAAmE,CACvEC,OAAQ,OACRN,QAAS,CACP,eAAgB,mBAChBE,cAAe,UAAYC,aAAaC,QAAQ,UAElDkB,KAAMC,KAAKC,UAAU,CACnBgH,WAAYA,EACZC,gBAAiBA,EACjBC,QAAS,qCAGVnI,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAACoI,GACL,GAAIA,EAAO9H,MAET,MAAM8H,EAER,OAAOA,KAIRpI,MAAK,SAACoI,GACL,MAAO,CACLF,gBAAiBA,EACjBC,QAASA,EACTE,aAAcD,OAvExBhC,EAAMzF,iBACD+G,GAAWE,EAJG,wDAYbU,EAAcV,EAASW,WAAWC,eAZrB,SAmBoBd,EAAOe,oBAAoB,CAChEzD,KAAM,OACN0D,KAAMJ,IArBW,gBAmBXhI,EAnBW,EAmBXA,MAAOqI,EAnBI,EAmBJA,cAIXrI,EACF7B,QAAQC,IAAI,8BAA+B4B,IAE3C7B,QAAQC,IAAI,kBAAmBiK,GACzBT,EAAkBS,EAAc/D,GACnB,GACH,GAYhBmD,EAAmB,CAAEE,WAbF,GAacC,kBAAiBC,QAZlC,MA7BC,4CAAH,sDAgGlB,OACE,0BAAM/I,UAAU,SAAS0H,SAAUgB,GACjC,kBAAC,EAAD,MACA,4BAAqCc,UAAWlB,GAAhD,+BC1FN,IAAMmB,EAAgBC,YACpB,+GAoBaC,E,uKAfX,OACE,kBAAC1G,EAAA,EAAD,CAAWjD,UAAU,iBACnB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,kBACb,kBAACmD,EAAA,EAAD,KACE,4EACA,kBAAC,WAAD,CAAUnD,UAAU,UAAUsI,OAAQmB,GACpC,kBAACpB,EAAD,c,GARW9D,a,iBC6DVqF,E,kDArEb,WAAY7K,GAAQ,IAAD,8BACjB,cAAMA,IAIR8K,QAAU,WACR,OAAI,EAAK9K,MAAM+K,MAEX,kBAAC7G,EAAA,EAAD,CAAW8G,OAAK,GAChB,kBAAC7G,EAAA,EAAD,CAAKlD,UAAU,WACb,kBAACgK,EAAA,EAAD,CAAUhK,UAAU,6BAClB,kBAACgK,EAAA,EAASC,OAAV,CAAiBC,YAAU,EAAC9D,QAAQ,UAAUZ,GAAG,kBAC/C,yBAAKhC,IAAI,sBAGX,kBAACwG,EAAA,EAASG,KAAV,KACE,kBAACH,EAAA,EAASI,KAAV,CAAezH,KAAK,cAApB,UACA,kBAACqH,EAAA,EAASI,KAAV,CACIhG,QAAS,WACP/C,OAAOC,QAAQ,qCACfd,aAAa6J,QACb,EAAKtL,MAAMkG,UAAS,GACpB,EAAKlG,MAAMY,QAAQoC,KAAK,MAE1BY,KAAK,KAPT,oBAcJ,kBAACQ,EAAA,EAAD,CAAKnD,UAAU,cAAcqD,GAAI,IAC/B,yBAAKG,IAAI,6BAOb,kBAACP,EAAA,EAAD,CAAW8G,OAAK,GAClB,kBAAC7G,EAAA,EAAD,CAAKlD,UAAU,WACb,kBAACgK,EAAA,EAAD,CAAUhK,UAAU,6BAClB,kBAACgK,EAAA,EAASC,OAAV,CAAiBC,YAAU,EAAC9D,QAAQ,UAAUZ,GAAG,kBAC/C,yBAAKhC,IAAI,sBAGX,kBAACwG,EAAA,EAASG,KAAV,KACE,kBAACH,EAAA,EAASI,KAAV,CAAezH,KAAK,gBAApB,eACA,kBAACqH,EAAA,EAASI,KAAV,CAAezH,KAAK,KAApB,eAGJ,kBAACQ,EAAA,EAAD,CAAKnD,UAAU,cAAcqD,GAAI,IAC/B,yBAAKG,IAAI,8BAlDf,EAAKtE,MAAQ,GAFI,E,iEA6DjB8D,KAAK6G,UACLxK,QAAQC,IAAI,SAAU0D,KAAKjE,MAAM+K,S,+BAIjC,OAAO,yBAAK9J,UAAU,iBAAiBgD,KAAK6G,e,GAnExBtF,aC0FT+F,G,wDA3Fb,WAAYvL,GAAQ,IAAD,8BACjB,cAAMA,IAQR0F,YAAc,SAACrD,GACb,EAAKH,SAAL,eAAiBG,EAAEsD,OAAOC,KAAOvD,EAAEsD,OAAOE,SAVzB,EAanB2F,cAAgB,SAACnJ,GAGf,GAFAA,EAAEG,iBAEG,EAAKrC,MAAM8E,OAAU,EAAK9E,MAAM4F,SAArC,CAIA,IAAMtD,EAAO,CACXwC,MAAO,EAAK9E,MAAM8E,MAClBc,SAAU,EAAK5F,MAAM4F,SACrBC,MAAO,EAAKhG,MAAMyL,MAAMC,OAAO1F,OAO3BrD,EAAU,CACdf,OAAQ,OACRN,QANc,IAAIC,QAAQ,CAC1B,eAAgB,qBAMhBqB,KAAMC,KAAKC,UAAUL,IAGvBd,MACE,8DACAgB,GAECd,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEa,QAASf,EAAee,aAE1C,SAACZ,GACC7B,QAAQC,IAAI4B,QA5ClB,EAAKhC,MAAQ,CACX8E,MAAO,GACPc,SAAU,GACVhD,QAAS,IALM,E,qDAoDjB,OACE,kBAACmB,EAAA,EAAD,CAAWjD,UAAU,aACnB,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKnD,UAAU,eAAeqD,GAAI,IAChC,wBAAIrD,UAAU,WAAd,+BACA,0BAAMA,UAAU,YAAY0H,SAAU1E,KAAKuH,eACzC,2BACEvK,UAAU,aACV4F,KAAK,QACLJ,GAAG,QACHb,KAAK,QACLe,SAAU1C,KAAKyB,YACfgB,YAAY,UAGd,6BAEA,2BACEzF,UAAU,aACV4F,KAAK,WACLJ,GAAG,WACHb,KAAK,WACLe,SAAU1C,KAAKyB,YACfgB,YAAY,yBAEd,6BACA,kBAAC/C,EAAA,EAAD,CAAQ0B,QAASpB,KAAKuH,cAAevK,UAAU,eAA/C,YAKF,2BAAIgD,KAAK9D,MAAM4C,gB,GApFCyC,cCmFbmG,G,wDAlFb,WAAY3L,GAAQ,IAAD,8BACjB,cAAMA,IAOR0F,YAAc,SAACrD,GACb,EAAKH,SAAL,eAAiBG,EAAEsD,OAAOC,KAAOvD,EAAEsD,OAAOE,SATzB,EAYnB+F,cAAgB,SAACvJ,GAGf,GAFAA,EAAEG,iBAEG,EAAKrC,MAAM8E,MAAhB,CAIA,IAAMxC,EAAO,CACXwC,MAAO,EAAK9E,MAAM8E,OAOdtC,EAAU,CACdf,OAAQ,OACRN,QANc,IAAIC,QAAQ,CAC1B,eAAgB,qBAMhBqB,KAAMC,KAAKC,UAAUL,IAGvBd,MACE,8DACAgB,GAECd,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEa,QAASf,EAAee,aAE1C,SAACZ,GACC7B,QAAQC,IAAI4B,QAzClB,EAAKhC,MAAQ,CACX8E,MAAO,GACPlC,QAAS,IAJM,E,qDAiDjB,OACE,kBAACmB,EAAA,EAAD,CAAWjD,UAAU,iBACnB,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKnD,UAAU,eAAeqD,GAAI,IAChC,yBAAKrD,UAAU,gBACb,wBAAIA,UAAU,UAAd,+BACA,wBAAIA,UAAU,oBAAd,2CACwC,KAExC,0BAAMA,UAAU,YAAY0H,SAAU1E,KAAK2H,eACzC,2BACE3K,UAAU,aACV4F,KAAK,QACLJ,GAAG,QACHb,KAAK,QACLe,SAAU1C,KAAKyB,YACfgB,YAAY,aAKpB,kBAACtC,EAAA,EAAD,CAAKnD,UAAU,cAAcqD,GAAI,IAC/B,kBAACX,EAAA,EAAD,CAAQ0B,QAASpB,KAAK2H,cAAe3K,UAAU,eAA/C,aAGA,2BAAIgD,KAAK9D,MAAM4C,gB,GA3ECyC,c,0BC0FbqG,E,4MAxFbzJ,aAAe,SAACC,GACdC,OAAOC,QACL,sFAEFF,EAAEG,iBACF,IAAMC,EAAO,CACXC,OAAQjB,aAAaC,QACnB,UAGFtB,OAAQ,EAAKD,MAAMC,QAGfkB,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,WAG5CiB,EAAU,CACdf,OAAQ,SACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,sDAAuDgB,GAC1Dd,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEa,QAASf,EAAee,UACxCvC,MACE,2EAEF,EAAKR,MAAMY,QAAQoC,KAAK,iBAG1B,SAACb,GACC7B,QAAQC,IAAI4B,O,uDAKlB,OACE,yBAAKlB,UAAU,UACb,kBAAC6K,EAAA,EAAD,CAAQC,MAAM,SAASC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,WACrD,kBAACJ,EAAA,EAAOK,MAAR,CAAcvI,KAAK,QAAQ3C,UAAU,cAArC,gBAGA,kBAAC6K,EAAA,EAAOZ,OAAR,CAAekB,gBAAc,0BAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiB5F,GAAG,yBAClB,kBAAC6F,EAAA,EAAD,CAAKrL,UAAU,WACb,kBAACqL,EAAA,EAAIC,KAAL,CAAU3I,KAAK,0BAA0B3C,UAAU,cAAnD,2BAGA,kBAACqL,EAAA,EAAIC,KAAL,CACE3I,KAAK,iCACL3C,UAAU,cAFZ,WAMA,kBAACqL,EAAA,EAAIC,KAAL,CACE3I,KAAK,WACL3C,UAAU,aACVoE,QAASpB,KAAK7B,cAHhB,yBAQF,kBAACkK,EAAA,EAAD,KAIE,kBAACA,EAAA,EAAIC,KAAL,CACEC,SAAU,EACV5I,KAAK,0BACL3C,UAAU,cAHZ,oB,GA1EOuE,a,gCCiGNiH,E,kDAlGb,WAAYzM,GAAQ,IAAD,8BACjB,cAAMA,IAORS,iBAAmB,WACjB,GAAIC,MAAMC,QAAQ,EAAKR,MAAMC,OAAOQ,SAClC,OAAI,EAAKT,MAAMC,OAAOQ,QAAQC,OAAS,EAC9B,EAAKV,MAAMC,OAAOQ,QAAQE,KAAI,SAACC,EAASC,GAC7C,OACE,4BACA,wBAAI6F,KAAK,OAAOJ,GAAG,UAAUb,KAAK,WAC/B,IACA7E,EAAQI,OAAS,IAFpB,UAIA,wBAAI0F,KAAK,OAAOJ,GAAG,OAAOb,KAAK,QAC5B,IACA,IAAI8G,KAAK3L,EAAQK,MAAMuL,0BAO5B,uBAAG1L,UAAU,aAAb,wDA3BW,EAmCnBI,aAAe,WACb,IAAMC,EAAU,IAAIC,QAAQ,CAC1BC,cAAe,UAAYC,aAAaC,QAAQ,SAChD,eAAgB,mBAChB,mBAAoB,mBAQtBC,MAAM,yDALU,CACdC,OAAQ,MACRN,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,IAAMC,EAAYD,EAClB,EAAKE,SAAS,CAAE9B,OAAQ6B,IACxB3B,QAAQC,IAAI,EAAKJ,MAAMC,WAGzB,SAAC+B,GACC7B,QAAQC,IAAI4B,OAzDlB,EAAKhC,MAAQ,CAAEC,OAAQ,CAAE0D,eAAgB,IAAMC,OAAQ,EAAGnD,QAAS,IAFlD,E,gEAmEfqD,KAAK5C,iB,+BAKP,OACE,kBAAC6C,EAAA,EAAD,CAAWjD,UAAU,YACnB,kBAACkD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAInD,UAAU,cAAd,mCAGJ,kBAACkD,EAAA,EAAD,CAAKyI,MAAM,uBACX,kBAACC,EAAA,EAAD,CAAOD,MAAM,sBAAsBE,SAAO,EAACC,OAAK,GAChD,+BACF,4BACE,uCACA,sCAIA,+BACC9I,KAAKxD,2B,GA1Fe+E,aC4NdwH,G,wDA9Nb,WAAYhN,GAAQ,IAAD,8BACjB,cAAMA,IAKRiN,eAAiB,SAAC5K,GAChBA,EAAEG,iBACF,IAAMC,EAAO,CACXsC,OAAQ,EAAK5E,MAAM4E,OACnBgB,SAAU,EAAK5F,MAAM4F,SACrBf,KAAM,EAAK7E,MAAM6E,KACjBkI,OAAQ,EAAK/M,MAAM+M,OACnBC,IAAK,EAAKhN,MAAMgN,IAChBC,KAAM,EAAKjN,MAAMiN,MAGb9L,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,iBACpBC,cAAe,UAAYC,aAAaC,QAAQ,WAG5CiB,EAAU,CACdf,OAAQ,OACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,yDAA0DgB,GAC7Dd,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAACuB,GACL9C,QAAQC,IAAI6C,OAnCC,EAuCnBiK,eAAiB,SAAChL,GAChBA,EAAEG,iBACF,IAAMC,EAAO,CACXsC,OAAQ,EAAK5E,MAAM4E,OACnBgB,SAAU,EAAK5F,MAAM4F,SACrBf,KAAM,EAAK7E,MAAM6E,KACjBkI,OAAQ,EAAK/M,MAAM+M,OACnBC,IAAK,EAAKhN,MAAMgN,IAChBC,KAAM,EAAKjN,MAAMiN,MAGb9L,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChB,mBAAoB,iBACpBC,cAAe,UAAYC,aAAaC,QAAQ,WAG5CiB,EAAU,CACdf,OAAQ,OACRgB,KAAMC,KAAKC,UAAUL,GACrBnB,QAASA,GAGXK,MAAM,2DAA4DgB,GAC/Dd,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAACuB,GACL9C,QAAQC,IAAI6C,OApEC,EAwEnB4E,OAAS,SAACC,GACR,IAAIqF,EAAW,EAAKnN,MAAMmN,SAC1BA,EAASrF,EAAMtC,OAAOC,MAAQqC,EAAMtC,OAAOE,MAC3C,EAAK3D,SAAS,CACZoL,SAAUA,KA5EK,EAgFnB5H,YAAc,SAACrD,GACb,EAAKH,SAAL,eAAiBG,EAAEsD,OAAOC,KAAOvD,EAAEsD,OAAOE,SAjFzB,EAmFnB0H,gBAAkB,WAChB,IAAMjM,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,WASlDC,MAAM,wDANU,CACdC,OAAQ,MAERN,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAGjBF,MAAK,SAACuB,GACL,EAAKlB,SAAS,CAAEf,OAAQiC,QArGX,EAyGnBuF,SAAW,SAACtG,GACVA,EAAEG,iBAEF,IAEMC,EAFO,IAAI+F,SAASnG,EAAEsD,QAItBrE,EAAU,IAAIC,QAAQ,CAC1BC,cAAe,UAAYC,aAAaC,QAAQ,WASlDC,MAAM,wDANU,CACdC,OAAQ,OACRgB,KAAMH,EACNnB,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACuB,GACL,EAAKlB,SAAS,CAAEa,QAASK,EAAaL,UACtCzC,QAAQC,IAAI,EAAKJ,MAAM4C,aA9H3B,EAAK5C,MAAQ,CACXmN,SAAU,IAHK,E,gEAqIjBrJ,KAAKsJ,oB,+BAGL,OACE,kBAACrJ,EAAA,EAAD,CAAWjD,UAAU,gBACnB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,WACb,kBAACmD,EAAA,EAAD,KACE,mEACA,4BACE,gCAASH,KAAK9D,MAAMgB,OAAS,IAA7B,WAEF,kBAACwC,EAAA,EAAD,CAAQ0B,QAASpB,KAAKoJ,gBAAtB,0BAGJ,kBAAClJ,EAAA,EAAD,CAAKlD,UAAU,gBACb,kBAACmD,EAAA,EAAD,KACE,4BACG,IADH,yGAOJ,kBAACD,EAAA,EAAD,CAAKlD,UAAU,SACb,kBAACmD,EAAA,EAAD,KACE,0BAAMuE,SAAU1E,KAAK0E,UACnB,2DACA,iEACA,2BAAO1H,UAAU,YAAY4F,KAAK,OAAOjB,KAAK,SAE9C,kBAACjC,EAAA,EAAD,CAAQkD,KAAK,UAAb,uBAGH5C,KAAK9D,MAAM4C,SAEd,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC+B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,gBACZd,KAAK,SACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM4E,SAEpB,kBAACoB,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,cACZd,KAAK,MACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAMgN,MAEpB,kBAAChH,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,QACZd,KAAK,OACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM6E,OAEpB,kBAACmB,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,kBACZd,KAAK,SACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAM+M,SAGpB,kBAAC/G,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLH,YAAY,aACZd,KAAK,OACLe,SAAU1C,KAAKyB,YACfG,MAAO5B,KAAK9D,MAAMiN,QAGtB,kBAACzJ,EAAA,EAAD,CACE1C,UAAU,aACV4F,KAAK,SACLxB,QAASpB,KAAKgJ,gBAHhB,8C,GAjNqBzH,cCwJlBgI,G,oEAjJb,WAAYxN,GAAQ,IAAD,8BACjB,cAAMA,IAGRgI,OAAS,SAACC,GACR,IAAIuF,EAAW,EAAKrN,MAAMqN,SAC1BA,EAASvF,EAAMtC,OAAOC,MAAQqC,EAAMtC,OAAOE,MAC3C,EAAK3D,SAAS,CACZsL,SAAUA,KARK,EAYnBC,kBAAoB,WAClB,IAAMnM,EAAU,IAAIC,QAAQ,CAC1BC,cAAe,UAAYC,aAAaC,QAAQ,SAChD,eAAgB,mBAChB,mBAAoB,mBAQtBC,MAAM,8DALU,CACdC,OAAQ,MACRN,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,IAAMb,EAASa,EACf,EAAKE,SAAS,CAAEf,OAAQA,OAG1B,SAACgB,GACC7B,QAAQC,IAAI4B,OAnCD,EAuCnBe,cAAgB,WACd,IAAM5B,EAAU,IAAIC,QAAQ,CAC1BC,cAAe,UAAYC,aAAaC,QAAQ,SAChD,eAAgB,mBAChB,mBAAoB,mBAQtBC,MAAM,0DALU,CACdC,OAAQ,MACRN,QAASA,IAIRO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAACG,GACC,EAAKE,SAAS,CAAEwL,OAAQ1L,OAG1B,SAACG,GACC7B,QAAQC,IAAI4B,OA7DD,EAiEnBwL,kBAAoB,WAClB,OAAO,EAAKxN,MAAMuN,OAAOE,WAAW9M,KAAI,SAACC,GACvC,OACE,kBAACqD,EAAA,EAAD,CAAKnD,UAAU,WAAWkE,GAAI,GAAIZ,EAAG,GAAID,GAAI,GAC3C,4BACE,gCAASvD,EAAQ8M,cAEnB,6BACA,kBAAC1H,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKS,QAAN,CACEC,KAAK,SACLH,YAAY,uBACZd,KAAK,SACLe,SAAU,EAAKqB,UAGnB,kBAACrE,EAAA,EAAD,CACE1C,UAAU,gBACV4F,KAAK,SACLxB,QAAS,WACP,IAAM/D,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,mBAChBC,cAAe,UAAYC,aAAaC,QAAQ,WAE5Ce,EAAO,CACXwC,MAAOlE,EAAQ+M,YACf3M,OAAQ,EAAKhB,MAAMqN,SAASrM,QAExBwB,EAAU,CACdf,OAAQ,OACRN,QAASA,EACTsB,KAAMC,KAAKC,UAAUL,IAGvBd,MAAM,iEAAkEgB,GACrEd,MAAK,SAACC,GACL,OAAOA,KAERD,MACC,SAACY,GACCnC,QAAQC,IAAIkC,MAGd,SAACN,GACC7B,QAAQC,IAAI4B,QA5BtB,gBA/EN,EAAKhC,MAAQ,CAAEuN,OAAQ,CAAEE,WAAY,IAAMJ,SAAU,IAFpC,E,gEA0HjBvJ,KAAKwJ,oBACLxJ,KAAKf,kB,+BAIL,OACE,kBAACgB,EAAA,EAAD,CAAWjD,UAAU,YACnB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,oBACb,kBAACmD,EAAA,EAAD,CAAKe,GAAI,GAAIZ,EAAG,GAAID,GAAI,IACtB,uEACA,wBAAIrD,UAAU,aACZ,gCAASgD,KAAK9D,MAAMgB,OAAS,IAA7B,WAEF,qDAIJ,kBAACgD,EAAA,EAAD,CAAKlD,UAAU,gBAAgBgD,KAAK0J,0B,GA5IrBnI,cC6DRuI,E,kDAlDb,WAAY/N,GAAQ,IAAD,8BACjB,cAAMA,IAMRkG,SAAW,SAACL,GACV,EAAK3D,SAAS,CAAE6I,MAAOlF,KANvB,EAAK1F,MAAQ,CACX4K,OAAO,GAHQ,E,gEAYoB,MAAjCtJ,aAAaC,QAAQ,UACvBuC,KAAK/B,SAAS,CAAE6I,OAAO,IAEzBzI,OAAO0L,iBAAiB,gBAAgB,kBACtCvM,aAAawM,WAAW,c,+BAIlB,IAAD,OACP,OACE,kBAAC,IAAD,KACE,yBAAKhN,UAAU,kBACb,kBAAC,EAAD,CAAWiF,SAAUjC,KAAKiC,SAAU6E,MAAO9G,KAAK9D,MAAM4K,QACtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmD,OAAK,EACLC,KAAK,IACLC,OAAQ,SAACpO,GAAD,OACN,kBAAC,EAAD,eAAWkG,SAAU,EAAKA,UAAclG,OAG5C,kBAAC,IAAD,CAAOmO,KAAK,eAAeE,UAAWvH,IACtC,kBAAC,IAAD,CAAOqH,KAAK,aAAaE,UAAWtO,IACpC,kBAAC,IAAD,CAAOoO,KAAK,qBAAqBE,UAAWC,IAC5C,kBAAC,IAAD,CAAOH,KAAK,WAAWE,UAAW9G,IAClC,kBAAC,IAAD,CAAO4G,KAAK,kBAAkBE,UAAWE,IACzC,kBAAC,IAAD,CAAOJ,KAAK,iBAAiBE,UAAWG,IACxC,kBAAC,IAAD,CAAOL,KAAK,iBAAiBE,UAAW1C,IACxC,kBAAC,IAAD,CAAOwC,KAAK,iBAAiBE,UAAW9C,IACxC,kBAAC,IAAD,CAAO4C,KAAK,YAAYE,UAAWrB,IACnC,kBAAC,IAAD,CAAOmB,KAAK,YAAYE,UAAWI,KAErC,kBAAC,EAAD,Y,GA7CQjJ,aCTEkJ,QACW,cAA7BpM,OAAOqM,SAASC,UAEe,UAA7BtM,OAAOqM,SAASC,UAEhBtM,OAAOqM,SAASC,SAASnD,MACvB,2DCZNoD,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,EAAD,OAEFxB,SAASyB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrN,MAAK,SAAAsN,GACJA,EAAaC,gBAEdC,OAAM,SAAAlN,GACL7B,QAAQ6B,MAAMA,EAAMY,c","file":"static/js/main.e5abc631.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./monProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: { restaurant: {} },\r\n      wallet: 1,\r\n      history: [],\r\n      stripeUrl: \"\",\r\n      restaurant: [],\r\n    };\r\n  }\r\n\r\n  abonnement = () => {\r\n    let ID = this.state.profil.stripeId;\r\n    console.log(ID);\r\n    if (ID === null) {\r\n      alert(\"vous devez vous abonner pour bénéficier de l'app\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  renderMesHistory = () => {\r\n    if (Array.isArray(this.state.profil.history)) {\r\n      if (this.state.profil.history.length > 0) {\r\n        return this.state.profil.history.map((element, index) => {\r\n          return (\r\n            <div className={\"historique\"} key={index}>\r\n              <p className={\"pourboire\"}>\r\n                vous avez reçu {element.amount}€ le {element.date}.\r\n              </p>\r\n            </div>\r\n          );\r\n        });\r\n      } else {\r\n        return (\r\n          <p className=\"pourboire\">\r\n            Vous n'avez reçu aucun pourboire pour l'instant.\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  };\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(this.state.profil);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteAffiliation = (e) => {\r\n    const data = {};\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/deleteWaiter\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.getWaiterList();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  infoStripe = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"get\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/customerAccount\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        window.open(responseData, \"_blank\");\r\n      });\r\n  };\r\n  // Récupération des données du serveur / restaurantName\r\n  getRestaurantList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/restaurantList\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ restaurant: data });\r\n          console.log(this.state.restaurant);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n    this.getRestaurantList();\r\n  }\r\n  renderCompteReferent = () => {\r\n    if (this.state.profil.mangoWalletReferent) {\r\n      return (\r\n        <Button className=\"lienCommentaire\" href=\"/referent\">\r\n          Mon compte Référent\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  renderMesRestau = () => {\r\n    if (!this.state.restaurant.length) {\r\n      return (\r\n        <h4 className=\"Nocoms\">\r\n          Vous n'êtes pas encore affilié à un restaurant\r\n        </h4>\r\n      );\r\n    } else {\r\n      return this.state.restaurant.map((element) => {\r\n        return (\r\n          <div className=\"articles\">\r\n            <h4 className=\"titre\">{element.restaurantName}</h4>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"contain\">\r\n        {/* {this.abonnement()}*/}\r\n        <Row className=\"mescartes\">\r\n          <Col className=\"mesdetails\" sm={12} md={12}>\r\n            <Col s={6} md={12} className=\"colPhoto\">\r\n              <Image\r\n                className=\"photoProfil\"\r\n                src={\r\n                  \"https://back-end.osc-fr1.scalingo.io\" +\r\n                  this.state.profil.picture\r\n                }\r\n                roundedCircle\r\n              />\r\n            </Col>\r\n            <div className=\"infoProfil\">\r\n              <h1>\r\n                {this.state.profil.firstname} {this.state.profil.lastname}\r\n              </h1>\r\n\r\n              <h3 className=\"titreNice\">{this.state.profil.staff}</h3>\r\n              <p className=\"profilPara\">{this.state.profil.adress}</p>\r\n              <p className=\"profilPara\">{this.state.profil.city}</p>\r\n\r\n              <p className=\"profilPara\">{this.state.profil.email} </p>\r\n              <p className=\"profilParafin\">{this.state.profil.phone}</p>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"monrestaurant\" sm={12} md={12}>\r\n            <h1 className=\"ligne\">Mes restaurants </h1>\r\n            {this.renderMesRestau()}\r\n          </Col>\r\n        </Row>\r\n\r\n      \r\n        <Row className=\"rowButton\">\r\n        <Col xs={12} md={6} lg={6}>\r\n            <button className=\"buttonAbo\" onClick={this.infoStripe}>\r\n              Mes pourboires individuels\r\n            </button>\r\n          </Col>\r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button className=\"buttonAbo\" href=\"/cagnotte\">\r\n              Mes pourboires collectifs\r\n            </Button>\r\n          </Col>\r\n          \r\n        </Row>\r\n        <Row>\r\n          <Col md={6} lg={6}>\r\n        <Button className=\"lienCommentaire\" href=\"/monAbonnement\">\r\n             Souscrire l'abonnement premium\r\n            </Button>\r\n            </Col>\r\n          <Col classeName=\"colModifier\" md={6} lg={6}>\r\n            <Link to=\"/modifierMonProfil\" className=\"modif\">\r\n              <button className=\"buttonModifier lienCommentaire\">Modifier mon profil</button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n         <Row>\r\n         \r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button className=\"lienCommentaire\" href=\"/mesTips\">\r\n              Mes commentaires\r\n            </Button>\r\n          </Col>\r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button className=\"lienCommentaire\" href=\"/mesHistoriques\">\r\n              Mes pourboires encaissés\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row >\r\n        <Col className='buttonRef' xs={12} s={12} md={6} lg={6}>\r\n            \r\n            \r\n            {this.renderCompteReferent()}\r\n          \r\n          </Col>\r\n          </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/monprofil\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexCont\">\r\n        <Row className=\"background\">\r\n          <Col className=\"blockConnexion\" sm={12} md={7} lg={12}>\r\n            <h1 className=\"titreConnexion\">Déjà membre?</h1>\r\n            <h1 className=\"titreConnexion\">Connectez-vous!</h1>\r\n            <Form className=\"identifiants\">\r\n              <Form.Row className=\"align-items-center\">\r\n                <Col xs={12} s={12}>\r\n                  <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                    Username\r\n                  </Form.Label>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <FormControl\r\n                      name=\"email\"\r\n                      id=\"inlineFormInputGroup\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleInput}\r\n                      value={this.state.email}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col s={12} className=\"colPassword\">\r\n                  <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                    Mot de passe\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    className=\" connexPass\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.password}\r\n                  />\r\n                </Col>\r\n                <Col sm={12}>\r\n                  <Link to=\"/passwordReset\">\r\n                    <p className=\"mdpOublie\">Mot de passe oublié ?</p>\r\n                  </Link>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                  <Link to=\"/monProfil\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"connectServeur\"\r\n                      onClick={this.addLogin}\r\n                    >\r\n                      Se connecter\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n\r\n                <Col className=\"colMembre\" xs={12}>\r\n                  {this.state.message}\r\n                  <p className=\"membre\">\r\n                    Pas encore membre ?\r\n                    <Link className=\"compte\" to=\"/inscription\">\r\n                      {\"\"} Créer mon compte\r\n                    </Link>\r\n                  </p>\r\n                </Col>\r\n              </Form.Row>\r\n            </Form>\r\n          </Col>\r\n          <Col className=\"imageDeskServeur\" md={5}></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      city: this.state.city,\r\n      adress: this.state.adress,\r\n      staff: this.state.staff,\r\n      date: this.state.date,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      }) \r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"inscr\">\r\n      <Row className=\"RowInscr\" >\r\n        <Col md={8} className=\"Titre\"  sm={12} >\r\n          \r\n            \r\n              <h1 className=\"titreh1\">Créer mon compte </h1>\r\n              <p className=\"Titrep\">Merci de remplir les informations ci-dessous pour finaliser la création de votre compte.</p>\r\n\r\n            \r\n            <Form>\r\n              <Form.Group controlId=\"lastname\">\r\n                \r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Nom\"\r\n                  name=\"lastname\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.lastname}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"firstname\">\r\n                \r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Prénom\"\r\n                  name=\"firstname\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.firstname}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"date\">\r\n               \r\n                <Form.Control\r\n                  type=\"date\"\r\n                  placeholder=\"Date de naissance\"\r\n                  name=\"date\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.date}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"adress\">\r\n               \r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adresse\"\r\n                  name=\"adress\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.adress}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"city\">\r\n                \r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ville\"\r\n                  name=\"city\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.city}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"phone\">\r\n                \r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Telephone(Facultatif)\"\r\n                  name=\"phone\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.phone}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"staff\">\r\n                \r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"text\"\r\n                  name=\"staff\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.staff}\r\n                  className=\"tailleInscr\"\r\n                >\r\n                  <option>-</option>\r\n                  <option>Commis</option>\r\n                  <option>Chef de rang</option>\r\n                  <option>Maître d'hôtel</option>\r\n                  <option>Barman</option>\r\n                  <option>Cuisinier</option>\r\n                  <option>Accueil</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                \r\n                <Form.Control\r\n                  type=\"mail\"\r\n                  placeholder=\"Email \"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.email}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                \r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleInput}\r\n                  value={this.state.password}\r\n                  className=\"tailleInscr\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Acceptez les Conditions générales d'utilisation\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                className=\"connectServeur\"\r\n                variant=\"primary\"\r\n                block\r\n                type=\"submit\"\r\n                onClick={this.addNewRegister}\r\n              >\r\n                S'inscrire\r\n              </Button>\r\n              <p>{this.state.message}</p>\r\n            </Form>\r\n         \r\n        </Col>\r\n        <Col className=\"imageInscrServeur\" md={4}>\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import React, { Component } from \"react\";\r\nimport \"./mesTips.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass mesComs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mesComs: { commentaires: [] },\r\n    };\r\n  }\r\n\r\n  getMesCommentaires = () => {\r\n    console.log(\"coucou\");\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mesCommentaires\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const mesCommentaires = responseObject;\r\n\r\n          this.setState({ mesComs: mesCommentaires });\r\n\r\n          console.log(this.state.mesComs);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderMesCommentaires = () => {\r\n    if (!this.state.mesComs.commentaires.length ) {\r\n      return <h4 className=\"Nocoms\">Vous n'avez pas encore de commentaires</h4>;\r\n    }else {\r\n    return this.state.mesComs.commentaires.map((element, index) => (\r\n      <div className=\"divCom\" key={index}>\r\n        <div className=\"nomPrenom\">\r\n          <h2 className=\"prenomCom\">{element.prenom}</h2>{\" \"}\r\n          <h2 className=\"nomCom\">{element.nom} </h2>\r\n        </div>\r\n        <div>\r\n          <p className=\"statut2\">{element.texte}</p>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }};\r\n  \r\n\r\n  componentDidMount() {\r\n    this.getMesCommentaires();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesComs\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className='titreComs'>Mes commentaires</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"commentaireBackground\">\r\n          <Col>{this.renderMesCommentaires()}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default mesComs;\r\n","import React, { Component } from \"react\";\r\nimport \"./modifierMonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      serveur: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let serveur = this.state.serveur;\r\n    serveur[event.target.name] = event.target.value;\r\n    this.setState({\r\n      serveur: serveur,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataServeur = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/dataProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const serveurInfo = responseObject;\r\n          this.setState({ serveur: serveurInfo, object: serveurInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editserveur = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      serveur: this.state.serveur,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/editlogo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.postDataServeur();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.postDataServeur();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={{ span: 12, offset: 3 }} className=\"titreModif\">\r\n       \r\n          <p >Modification du profil</p>\r\n        \r\n        \r\n        <Form>\r\n          <Form.Group controlId=\"formGroupName\">\r\n            \r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.serveur.lastname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPrenom\">\r\n         \r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.serveur.firstname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAdresse\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Adresse\"\r\n              name=\"adress\"\r\n              onChange={this.change}\r\n              value={this.state.serveur.adress}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formVille\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ville\"\r\n              name=\"city\"\r\n              onChange={this.change}\r\n              value={this.state.serveur.city}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formTel\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telephone(Facultatif)\"\r\n              name=\"phone\"\r\n              onChange={this.change}\r\n              value={this.state.serveur.phone}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formPoste\">\r\n                \r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"text\"\r\n                  name=\"staff\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.staff}\r\n                >\r\n                  <option>-</option>\r\n                  <option>Commis</option>\r\n                  <option>Chef de rang</option>\r\n                  <option>Maître d'hôtel</option>\r\n                  <option>Barman</option>\r\n                  <option>Cuisinier</option>\r\n                  <option>Accueil</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n        </Form>\r\n        \r\n        <div>\r\n          <form onSubmit={this.modifProfilLogo} className=\"formLogo\">\r\n            <img\r\n              className=\"serveurPicture\"\r\n              src={\"https://back-end.osc-fr1.scalingo.io/\" + this.state.serveur.picture}\r\n            ></img>\r\n            <br />\r\n            <br />\r\n            <input className=\"chargePic\" type=\"file\" name=\"file\" />\r\n\r\n            <button className=\"button\" type=\"submit\">\r\n              Télécharger\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Button\r\n          className=\"submitButton\"\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={this.editserveur}\r\n        >\r\n          Mettre à jour mon profil\r\n        </Button>\r\n        </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Card details\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\n//import \"./checkouForm.css\";\r\nimport CardSection from \"../cardSection/CardSection\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/createsubscription\", {\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n          body: JSON.stringify({\r\n            customerId: customerId,\r\n            paymentMethodId: paymentMethodId,\r\n            priceId: \"price_1Hr1j9Hoh2Vgz5QdvrI9FBDN\",\r\n          }),\r\n        })\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      <button /*className=\"submitButton\"*/ disabled={!stripe}>\r\n        Devenir un Serveur Premium\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./monAbonnement.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport CheckoutForm from \"../monAbonnement/checkoutForm\";\r\n\r\n//import \"./monAbonnement.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium serveur TIPOURBOIRE</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./barreMenu.css\";\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n        <Row className=\"partie1\">\r\n          <Dropdown className=\"nav justify-content-right\">\r\n            <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n              <img src=\"/images/user.png\" />\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"/MonProfil\">Profil</Dropdown.Item>\r\n              <Dropdown.Item\r\n                  onClick={() => {\r\n                    window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\"\r\n                >\r\n                  Déconnexion\r\n                </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <Col className=\"logoPartie1\" md={12}>\r\n            <img src=\"/images/logoJaune.png\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      )\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n      <Row className=\"partie1\">\r\n        <Dropdown className=\"nav justify-content-right\">\r\n          <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n            <img src=\"/images/user.png\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"/inscription\">Inscription</Dropdown.Item>\r\n            <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Col className=\"logoPartie1\" md={12}>\r\n          <img src=\"/images/logoJaune.png\" />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n    console.log(\"coucou\", this.props.login);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n} \r\nexport default Barremenu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/password-renew\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button onClick={this.passwordRenew} className=\"renewButton\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/password-reset\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <Button onClick={this.passwordReset} className=\"resetButton\">\r\n              Confirmer\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass footer extends Component {\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"https://tipourboire.com\" className=\"textFooter\">\r\n                Condition Général\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#pricing\"\r\n                className=\"textFooter\"\r\n                onClick={this.deleteProfil}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/* <Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link\r\n                eventKey={2}\r\n                href=\"https://tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport \"./meshistoriques.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass mesHistoriques extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { profil: { restaurantName: {} }, wallet: 1, history: [] };\r\n  }\r\n   \r\n  \r\n\r\n  \r\n  renderMesHistory = () => {\r\n    if (Array.isArray(this.state.profil.history)) {\r\n      if (this.state.profil.history.length > 0) {\r\n        return this.state.profil.history.map((element, index) => {\r\n          return (\r\n            <tr>\r\n            <td type=\"text\" id=\"montant\" name=\"montant\">\r\n              {\" \"}\r\n              {element.amount / 100}€\r\n            </td>\r\n            <td type=\"date\" id=\"date\" name=\"date\">\r\n              {\" \"}\r\n              {new Date(element.date).toLocaleDateString()}\r\n            </td>\r\n          </tr>\r\n          );\r\n        });\r\n      } else {\r\n        return (\r\n          <p className=\"pourboire\">\r\n            Vous n'avez reçu aucun pourboire pour l'instant.\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(this.state.profil);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n      this.getMonProfil();\r\n  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesHisto\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className='titreHisto'>Mes Historiques de pourboires</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row class=\"table-responsive-sm\">\r\n        <Table class=\"table-responsive-sm\" striped hover>\r\n        <thead>\r\n      <tr>\r\n        <th>Montant</th>\r\n        <th>Date</th>\r\n  \r\n      </tr>\r\n      </thead>\r\n        <tbody>\r\n        {this.renderMesHistory()}\r\n        </tbody>\r\n      </Table>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default mesHistoriques;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./CagnotteCollective.css\";\r\n\r\nclass CagnotteCollective extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      document: {},\r\n    };\r\n  }\r\n  addBankAccount = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      adress: this.state.adress,\r\n      password: this.state.password,\r\n      city: this.state.city,\r\n      region: this.state.region,\r\n      zip: this.state.zip,\r\n      iban: this.state.iban,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mangoBank\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n      });\r\n  };\r\n\r\n  payoutMangoPay = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      adress: this.state.adress,\r\n      password: this.state.password,\r\n      city: this.state.city,\r\n      region: this.state.region,\r\n      zip: this.state.zip,\r\n      iban: this.state.iban,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/payoutMango\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n      });\r\n  };\r\n\r\n  change = (event) => {\r\n    let document = this.state.document;\r\n    document[event.target.name] = event.target.value;\r\n    this.setState({\r\n      document: document,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  getWalletAmount = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"get\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/getWalet\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ amount: responseData });\r\n      });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let base64 = new FormData(e.target);\r\n\r\n    const data = base64;\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mangoKYC\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n        console.log(this.state.message);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletAmount();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"cagnotteCont\">\r\n        <Row className=\"rowCagn\">\r\n          <Col>\r\n            <h1>Montant des pourboires collectifs :</h1>\r\n            <h2>\r\n              <strong>{this.state.amount / 100} euros</strong>\r\n            </h2>\r\n            <Button onClick={this.payoutMangoPay}>Retirer votre argent</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowPasDeCagn\">\r\n          <Col>\r\n            <h5>\r\n              {\" \"}\r\n              Pas encore de cagnotte pour percevoir vos pourboires collectifs ?\r\n              Suivez les étapes ci-dessous !\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowId\">\r\n          <Col>\r\n            <form onSubmit={this.onSubmit}>\r\n              <h3>Confirmation d'identité </h3>\r\n              <h5>(Recto Verso sur la même page)</h5>\r\n              <input className=\"chargePic\" type=\"file\" name=\"file\" />\r\n\r\n              <Button type=\"submit\">Télécharger</Button>\r\n            </form>\r\n          </Col>\r\n          {this.state.message}\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Votre Adresse\"\r\n                name=\"adress\"\r\n                onChange={this.handleInput}\r\n                value={this.state.adress}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Code Postal\"\r\n                name=\"zip\"\r\n                onChange={this.handleInput}\r\n                value={this.state.zip}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ville\"\r\n                name=\"city\"\r\n                onChange={this.handleInput}\r\n                value={this.state.city}\r\n              />\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Votre Région\"\r\n                name=\"region\"\r\n                onChange={this.handleInput}\r\n                value={this.state.region}\r\n              />\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Votre IBAN\"\r\n                name=\"iban\"\r\n                onChange={this.handleInput}\r\n                value={this.state.iban}\r\n              />\r\n            </Form>\r\n            <Button\r\n              className='butBankAcc'\r\n              type=\"submit\"\r\n              onClick={this.addBankAccount}\r\n            >\r\n              Envoyez les informations banquaires\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CagnotteCollective;\r\n","import React, { Component } from \"react\";\r\nimport \"./referent.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\n\r\nclass referent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { waiter: { tabServeur: [] }, referent: [] };\r\n  }\r\n  change = (event) => {\r\n    let referent = this.state.referent;\r\n    referent[event.target.name] = event.target.value;\r\n    this.setState({\r\n      referent: referent,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n  getReferentWallet = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/referentWallet\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const amount = responseObject;\r\n          this.setState({ amount: amount });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/waiterList\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ waiter: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderMesServeurs = () => {\r\n    return this.state.waiter.tabServeur.map((element) => {\r\n      return (\r\n        <Col className=\"nameServ\" xs={12} s={12} md={6}>\r\n          <h3>\r\n            <strong>{element.serveurName}</strong>\r\n          </h3>\r\n          <br />\r\n          <Form>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Montant du transfert\"\r\n              name=\"amount\"\r\n              onChange={this.change}\r\n            />\r\n          </Form>\r\n          <Button\r\n            className=\"CollectButton\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n              const data = {\r\n                email: element.serveurMail,\r\n                amount: this.state.referent.amount,\r\n              };\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/referentTransfert\", options)\r\n                .then((response) => {\r\n                  return response;\r\n                })\r\n                .then(\r\n                  (data) => {\r\n                    console.log(data);\r\n                  },\r\n\r\n                  (error) => {\r\n                    console.log(error);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            Envoyez\r\n          </Button>\r\n        </Col>\r\n      );\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getReferentWallet();\r\n    this.getWaiterList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesHisto\">\r\n        <Row className=\"commentaireHisto\">\r\n          <Col xs={12} s={12} md={12}>\r\n            <h1>Montant de la cagnotte référent :</h1>\r\n            <h2 className=\"montantCo\">\r\n              <strong>{this.state.amount / 100} euros</strong>\r\n            </h2>\r\n            <h1>Liste des Serveurs:</h1>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"rowServeurCo\">{this.renderMesServeurs()}</Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default referent;\r\n","import React, { Component } from \"react\";\r\nimport \"../App/App.css\";\r\nimport Profil from \"../monProfil/monProfil\";\r\nimport Connexion from \"../connexion/connexion\";\r\nimport Inscription from \"../inscription/inscription\";\r\nimport MesTips from \"../mesTips/mesTips\";\r\nimport ModifierMonProfil from \"../modifierMonProfil/modifierMonProfil\";\r\nimport monAbonnement from \"../monAbonnement/monAbonnement\";\r\nimport Barremenu from \"../../Assets/barreMenu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Footer from \"../../Assets/footer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CardSection from \"../cardSection/CardSection\";\r\nimport mesComs from \"../mesTips/mesTips\";\r\nimport mesHisto from \"../MesHistoriques/mesHistoriques\";\r\nimport CagnotteCollective from \"../CagnotteCollective/CagnotteCollective\";\r\nimport Referent from \"../Referent/referent\";\r\n\r\n/* Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n    window.addEventListener(\"beforeunload\", () =>\r\n      localStorage.removeItem(\"token\")\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"main-container\">\r\n          <Barremenu setLogin={this.setLogin} login={this.state.login} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route path=\"/monProfil\" component={Profil} />\r\n            <Route path=\"/modifierMonProfil\" component={ModifierMonProfil} />\r\n            <Route path=\"/mesTips\" component={mesComs} />\r\n            <Route path=\"/mesHistoriques\" component={mesHisto} />\r\n            <Route path=\"/monAbonnement\" component={monAbonnement} />\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/cagnotte\" component={CagnotteCollective} />\r\n            <Route path=\"/referent\" component={Referent} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}